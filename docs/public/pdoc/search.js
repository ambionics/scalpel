window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = [{"fullname": "python3-10", "modulename": "python3-10", "kind": "module", "doc": "<h1 id=\"python-libraries-bundled-with-scalpel\">Python libraries bundled with Scalpel</h1>\n\n<hr />\n\n<h2 id=\"pyscalpelpython3-10pyscalpelhtml\"><a href=\"python3-10/pyscalpel.html\">pyscalpel</a></h2>\n\n<p>This is a module providing tools to handle Burp HTTP traffic through the use of the Scalpel extension.</p>\n\n<p>It provides many utilities to manipulate HTTP requests, responses and converting data.</p>\n\n<hr />\n\n<h2 id=\"qspython3-10qshtml\"><a href=\"python3-10/qs.html\">qs</a></h2>\n\n<p>A small module to parse PHP-style query strings.</p>\n\n<p>Used by pyscalpel</p>\n\n<hr />\n\n<h1 id=\"go-back-to-the-user-documentation\"><a href=\"../\">\u2190 Go back to the user documentation</a></h1>\n"}, {"fullname": "python3-10.pyscalpel", "modulename": "python3-10.pyscalpel", "kind": "module", "doc": "<p>This is a module providing tools to handle Burp HTTP traffic through the use of the Scalpel extension.</p>\n\n<p>It provides many utilities to manipulate HTTP requests, responses and converting data.</p>\n"}, {"fullname": "python3-10.pyscalpel.Request", "modulename": "python3-10.pyscalpel", "qualname": "Request", "kind": "class", "doc": "<p>A \"Burp oriented\" HTTP request class</p>\n\n<p>This class allows to manipulate Burp requests in a Pythonic way.</p>\n"}, {"fullname": "python3-10.pyscalpel.Request.__init__", "modulename": "python3-10.pyscalpel", "qualname": "Request.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">method</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">scheme</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;http&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;https&#39;</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">host</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">port</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">http_version</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">headers</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">headers</span><span class=\"o\">.</span><span class=\"n\">Headers</span><span class=\"p\">,</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">bytes</span><span class=\"p\">,</span> <span class=\"nb\">bytes</span><span class=\"p\">],</span> <span class=\"o\">...</span><span class=\"p\">],</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">bytes</span><span class=\"p\">,</span> <span class=\"nb\">bytes</span><span class=\"p\">]]]</span>,</span><span class=\"param\">\t<span class=\"n\">authority</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">content</span><span class=\"p\">:</span> <span class=\"nb\">bytes</span> <span class=\"o\">|</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "python3-10.pyscalpel.Request.host", "modulename": "python3-10.pyscalpel", "qualname": "Request.host", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "python3-10.pyscalpel.Request.port", "modulename": "python3-10.pyscalpel", "qualname": "Request.port", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "python3-10.pyscalpel.Request.method", "modulename": "python3-10.pyscalpel", "qualname": "Request.method", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "python3-10.pyscalpel.Request.scheme", "modulename": "python3-10.pyscalpel", "qualname": "Request.scheme", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Literal[&#x27;http&#x27;, &#x27;https&#x27;]"}, {"fullname": "python3-10.pyscalpel.Request.authority", "modulename": "python3-10.pyscalpel", "qualname": "Request.authority", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "python3-10.pyscalpel.Request.path", "modulename": "python3-10.pyscalpel", "qualname": "Request.path", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "python3-10.pyscalpel.Request.http_version", "modulename": "python3-10.pyscalpel", "qualname": "Request.http_version", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "python3-10.pyscalpel.Request.update_content_length", "modulename": "python3-10.pyscalpel", "qualname": "Request.update_content_length", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "True"}, {"fullname": "python3-10.pyscalpel.Request.headers", "modulename": "python3-10.pyscalpel", "qualname": "Request.headers", "kind": "variable", "doc": "<p>The request HTTP headers</p>\n\n<p>Returns:\n    Headers: a case insensitive dict containing the HTTP headers</p>\n", "annotation": ": pyscalpel.http.headers.Headers"}, {"fullname": "python3-10.pyscalpel.Request.make", "modulename": "python3-10.pyscalpel", "qualname": "Request.make", "kind": "function", "doc": "<p>Create a request from an URL</p>\n\n<p>Args:\n    method (str): The request method (GET,POST,PUT,PATCH, DELETE,TRACE,...)\n    url (str): The request URL\n    content (bytes | str, optional): The request content. Defaults to \"\".\n    headers (Headers, optional): The request headers. Defaults to ().</p>\n\n<p>Returns:\n    Request: The HTTP request</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">method</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">content</span><span class=\"p\">:</span> <span class=\"nb\">bytes</span> <span class=\"o\">|</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">headers</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">headers</span><span class=\"o\">.</span><span class=\"n\">Headers</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"nb\">bytes</span><span class=\"p\">,</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"nb\">bytes</span><span class=\"p\">],</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">bytes</span><span class=\"p\">,</span> <span class=\"nb\">bytes</span><span class=\"p\">],</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">bytes</span><span class=\"p\">,</span> <span class=\"nb\">bytes</span><span class=\"p\">]]]</span> <span class=\"o\">=</span> <span class=\"p\">()</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">Request</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.Request.from_burp", "modulename": "python3-10.pyscalpel", "qualname": "Request.from_burp", "kind": "function", "doc": "<p>Construct an instance of the Request class from a Burp suite HttpRequest.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>request</strong>:  The Burp suite HttpRequest to convert.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A Request with the same data as the Burp suite HttpRequest.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">request</span><span class=\"p\">:</span> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">http_request</span><span class=\"o\">.</span><span class=\"n\">IHttpRequest</span>,</span><span class=\"param\">\t<span class=\"n\">service</span><span class=\"p\">:</span> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">http_service</span><span class=\"o\">.</span><span class=\"n\">IHttpService</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">Request</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.Request.to_burp", "modulename": "python3-10.pyscalpel", "qualname": "Request.to_burp", "kind": "function", "doc": "<p>Convert the request to a Burp suite <code>IHttpRequest</code>.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The request as a Burp suite <code>IHttpRequest</code>.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">http_request</span><span class=\"o\">.</span><span class=\"n\">IHttpRequest</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.Request.from_raw", "modulename": "python3-10.pyscalpel", "qualname": "Request.from_raw", "kind": "function", "doc": "<p>Construct an instance of the Request class from raw bytes.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>data</strong>:  The raw bytes to convert.</li>\n<li><strong>real_host</strong>:  The real host to connect to.</li>\n<li><strong>port</strong>:  The port of the request.</li>\n<li><strong>scheme</strong>:  The scheme of the request.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A <code>Request</code> with the same data as the raw bytes.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"nb\">bytes</span> <span class=\"o\">|</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">real_host</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">port</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">scheme</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;http&#39;</span><span class=\"p\">],</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;https&#39;</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;http&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">Request</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.Request.url", "modulename": "python3-10.pyscalpel", "qualname": "Request.url", "kind": "variable", "doc": "<p>The full URL string, constructed from <code>Request.scheme</code>,\n    <code>Request.host</code>, <code>Request.port</code> and <code>Request.path</code>.</p>\n\n<p>Setting this property updates these attributes as well.</p>\n", "annotation": ": str"}, {"fullname": "python3-10.pyscalpel.Request.query", "modulename": "python3-10.pyscalpel", "qualname": "Request.query", "kind": "variable", "doc": "<p>The query string parameters as a dict-like object</p>\n\n<p>Returns:\n    QueryParamsView: The query string parameters</p>\n", "annotation": ": pyscalpel.http.body.urlencoded.URLEncodedFormView"}, {"fullname": "python3-10.pyscalpel.Request.content", "modulename": "python3-10.pyscalpel", "qualname": "Request.content", "kind": "variable", "doc": "<p>The request content / body as raw bytes</p>\n\n<p>Returns:\n    bytes | None: The content if it exists</p>\n", "annotation": ": bytes | None"}, {"fullname": "python3-10.pyscalpel.Request.body", "modulename": "python3-10.pyscalpel", "qualname": "Request.body", "kind": "variable", "doc": "<p>Alias for content()</p>\n\n<p>Returns:\n    bytes | None: The request body / content</p>\n", "annotation": ": bytes | None"}, {"fullname": "python3-10.pyscalpel.Request.update_serializer_from_content_type", "modulename": "python3-10.pyscalpel", "qualname": "Request.update_serializer_from_content_type", "kind": "function", "doc": "<p>Update the form parsing based on the given Content-Type</p>\n\n<p>Args:\n    content_type (ImplementedContentTypesTp | str | None, optional): The form content-type. Defaults to None.\n    fail_silently (bool, optional): Determine if an excpetion is raised when the content-type is unknown. Defaults to False.</p>\n\n<p>Raises:\n    FormNotParsedException: Raised when the content-type is unknown.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">content_type</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;application/x-www-form-urlencoded&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;application/json&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;multipart/form-data&#39;</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">fail_silently</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.Request.content_type", "modulename": "python3-10.pyscalpel", "qualname": "Request.content_type", "kind": "variable", "doc": "<p>The Content-Type header value.</p>\n\n<p>Returns:\n    str | None: &lt;=&gt; self.headers.get(\"Content-Type\")</p>\n", "annotation": ": str | None"}, {"fullname": "python3-10.pyscalpel.Request.create_defaultform", "modulename": "python3-10.pyscalpel", "qualname": "Request.create_defaultform", "kind": "function", "doc": "<p>Creates the form if it doesn't exist, else returns the existing one</p>\n\n<p>Args:\n    content_type (IMPLEMENTED_CONTENT_TYPES_TP | None, optional): The form content-type. Defaults to None.\n    update_header (bool, optional): Whether to update the header. Defaults to True.</p>\n\n<p>Raises:\n    FormNotParsedException: Thrown when provided content-type has no implemented form-serializer\n    FormNotParsedException: Thrown when the raw content could not be parsed.</p>\n\n<p>Returns:\n    MutableMapping[Any, Any]: The mapped form.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">content_type</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;application/x-www-form-urlencoded&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;application/json&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;multipart/form-data&#39;</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">update_header</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">MutableMapping</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.Request.form", "modulename": "python3-10.pyscalpel", "qualname": "Request.form", "kind": "variable", "doc": "<p>Mapping from content parsed accordingly to Content-Type</p>\n\n<p>Raises:\n    FormNotParsedException: The content could not be parsed accordingly to Content-Type</p>\n\n<p>Returns:\n    MutableMapping[Any, Any]: The mapped request form</p>\n", "annotation": ": MutableMapping[Any, Any]"}, {"fullname": "python3-10.pyscalpel.Request.urlencoded_form", "modulename": "python3-10.pyscalpel", "qualname": "Request.urlencoded_form", "kind": "variable", "doc": "<p>The urlencoded form data</p>\n\n<p>Converts the content to the urlencoded form format if needed.\nModification to this object will update Request.content and vice versa</p>\n\n<p>Returns:\n    QueryParams: The urlencoded form data</p>\n", "annotation": ": pyscalpel.http.body.urlencoded.URLEncodedForm"}, {"fullname": "python3-10.pyscalpel.Request.json_form", "modulename": "python3-10.pyscalpel", "qualname": "Request.json_form", "kind": "variable", "doc": "<p>The JSON form data</p>\n\n<p>Converts the content to the JSON form format if needed.\nModification to this object will update Request.content and vice versa</p>\n\n<p>Returns:\n  dict[JSON_KEY_TYPES, JSON_VALUE_TYPES]: The JSON form data</p>\n", "annotation": ": dict[str | int | float, str | int | float | bool | None | list[str | int | float | bool | None | list[ForwardRef(&#x27;JSON_VALUE_TYPES&#x27;)] | dict[str | int | float, ForwardRef(&#x27;JSON_VALUE_TYPES&#x27;)]] | dict[str | int | float, str | int | float | bool | None | list[ForwardRef(&#x27;JSON_VALUE_TYPES&#x27;)] | dict[str | int | float, ForwardRef(&#x27;JSON_VALUE_TYPES&#x27;)]]]"}, {"fullname": "python3-10.pyscalpel.Request.multipart_form", "modulename": "python3-10.pyscalpel", "qualname": "Request.multipart_form", "kind": "variable", "doc": "<p>The multipart form data</p>\n\n<p>Converts the content to the multipart form format if needed.\nModification to this object will update Request.content and vice versa</p>\n\n<p>Returns:\n    MultiPartForm</p>\n", "annotation": ": pyscalpel.http.body.multipart.MultiPartForm"}, {"fullname": "python3-10.pyscalpel.Request.cookies", "modulename": "python3-10.pyscalpel", "qualname": "Request.cookies", "kind": "variable", "doc": "<p>The request cookies.\nFor the most part, this behaves like a dictionary.\nModifications to the MultiDictView update <code>Request.headers</code>, and vice versa.</p>\n", "annotation": ": _internal_mitmproxy.coretypes.multidict.MultiDictView[str, str]"}, {"fullname": "python3-10.pyscalpel.Request.host_header", "modulename": "python3-10.pyscalpel", "qualname": "Request.host_header", "kind": "variable", "doc": "<p>Host header value</p>\n\n<p>Returns:\n    str | None: The host header value</p>\n", "annotation": ": str | None"}, {"fullname": "python3-10.pyscalpel.Request.text", "modulename": "python3-10.pyscalpel", "qualname": "Request.text", "kind": "function", "doc": "<p>The decoded content</p>\n\n<p>Args:\n    encoding (str, optional): encoding to use. Defaults to \"utf-8\".</p>\n\n<p>Returns:\n    str: The decoded content</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">encoding</span><span class=\"o\">=</span><span class=\"s1\">&#39;utf-8&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.Request.content_length", "modulename": "python3-10.pyscalpel", "qualname": "Request.content_length", "kind": "variable", "doc": "<p>Returns the Content-Length header value\n   Returns 0 if the header is absent</p>\n\n<p>Args:\n    value (int | str): The Content-Length value</p>\n\n<p>Raises:\n    RuntimeError: Throws RuntimeError when the value is invalid</p>\n", "annotation": ": int"}, {"fullname": "python3-10.pyscalpel.Request.pretty_host", "modulename": "python3-10.pyscalpel", "qualname": "Request.pretty_host", "kind": "variable", "doc": "<p>Returns the most approriate host\nReturns self.host when it exists, else it returns self.host_header</p>\n\n<p>Returns:\n    str: The request target host</p>\n", "annotation": ": str"}, {"fullname": "python3-10.pyscalpel.Request.host_is", "modulename": "python3-10.pyscalpel", "qualname": "Request.host_is", "kind": "function", "doc": "<p>Perform wildcard matching (fnmatch) on the target host.</p>\n\n<p>Args:\n    pattern (str): The pattern to use</p>\n\n<p>Returns:\n    bool: Whether the pattern matches</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">patterns</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.Request.path_is", "modulename": "python3-10.pyscalpel", "qualname": "Request.path_is", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">patterns</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.Response", "modulename": "python3-10.pyscalpel", "qualname": "Response", "kind": "class", "doc": "<p>A \"Burp oriented\" HTTP response class</p>\n\n<p>This class allows to manipulate Burp responses in a Pythonic way.</p>\n\n<p>Fields:\n    scheme: http or https\n    host: The initiating request target host\n    port: The initiating request target port\n    request: The initiating request.</p>\n", "bases": "_internal_mitmproxy.http.Response"}, {"fullname": "python3-10.pyscalpel.Response.__init__", "modulename": "python3-10.pyscalpel", "qualname": "Response.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">http_version</span><span class=\"p\">:</span> <span class=\"nb\">bytes</span>,</span><span class=\"param\">\t<span class=\"n\">status_code</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">reason</span><span class=\"p\">:</span> <span class=\"nb\">bytes</span>,</span><span class=\"param\">\t<span class=\"n\">headers</span><span class=\"p\">:</span> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">headers</span><span class=\"o\">.</span><span class=\"n\">Headers</span> <span class=\"o\">|</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">bytes</span><span class=\"p\">,</span> <span class=\"nb\">bytes</span><span class=\"p\">],</span> <span class=\"o\">...</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">content</span><span class=\"p\">:</span> <span class=\"nb\">bytes</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">trailers</span><span class=\"p\">:</span> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">headers</span><span class=\"o\">.</span><span class=\"n\">Headers</span> <span class=\"o\">|</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">bytes</span><span class=\"p\">,</span> <span class=\"nb\">bytes</span><span class=\"p\">],</span> <span class=\"o\">...</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">scheme</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;http&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;https&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;http&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">host</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">port</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span></span>)</span>"}, {"fullname": "python3-10.pyscalpel.Response.scheme", "modulename": "python3-10.pyscalpel", "qualname": "Response.scheme", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Literal[&#x27;http&#x27;, &#x27;https&#x27;]", "default_value": "&#x27;http&#x27;"}, {"fullname": "python3-10.pyscalpel.Response.host", "modulename": "python3-10.pyscalpel", "qualname": "Response.host", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;&#x27;"}, {"fullname": "python3-10.pyscalpel.Response.port", "modulename": "python3-10.pyscalpel", "qualname": "Response.port", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "0"}, {"fullname": "python3-10.pyscalpel.Response.request", "modulename": "python3-10.pyscalpel", "qualname": "Response.request", "kind": "variable", "doc": "<p></p>\n", "annotation": ": pyscalpel.http.request.Request | None", "default_value": "None"}, {"fullname": "python3-10.pyscalpel.Response.from_mitmproxy", "modulename": "python3-10.pyscalpel", "qualname": "Response.from_mitmproxy", "kind": "function", "doc": "<p>Construct an instance of the Response class from a <a href=\"https://docs.mitmproxy.org/stable/api/mitmproxy/http.html#Response\">mitmproxy.http.HTTPResponse</a>.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li>**response: The <a href=\"https**: //docs.mitmproxy.org/stable/api/mitmproxy/http.html#Response\">mitmproxy.http.HTTPResponse</a> to convert.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A <code>Response</code> with the same data as the <a href=\"https://docs.mitmproxy.org/stable/api/mitmproxy/http.html#Response\">mitmproxy.http.HTTPResponse</a>.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">response</span><span class=\"p\">:</span> <span class=\"n\">_internal_mitmproxy</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">Response</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">Response</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.Response.from_burp", "modulename": "python3-10.pyscalpel", "qualname": "Response.from_burp", "kind": "function", "doc": "<p>Construct an instance of the Response class from a Burp suite <code>IHttpResponse</code>.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">response</span><span class=\"p\">:</span> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">http_response</span><span class=\"o\">.</span><span class=\"n\">IHttpResponse</span>,</span><span class=\"param\">\t<span class=\"n\">service</span><span class=\"p\">:</span> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">http_service</span><span class=\"o\">.</span><span class=\"n\">IHttpService</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">request</span><span class=\"p\">:</span> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">http_request</span><span class=\"o\">.</span><span class=\"n\">IHttpRequest</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">Response</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.Response.to_burp", "modulename": "python3-10.pyscalpel", "qualname": "Response.to_burp", "kind": "function", "doc": "<p>Convert the response to a Burp suite <code>IHttpResponse</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">http_response</span><span class=\"o\">.</span><span class=\"n\">IHttpResponse</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.Response.from_raw", "modulename": "python3-10.pyscalpel", "qualname": "Response.from_raw", "kind": "function", "doc": "<p>Construct an instance of the Response class from raw bytes.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>data</strong>:  The raw bytes to convert.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A <code>Response</code> parsed from the raw bytes.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"nb\">bytes</span> <span class=\"o\">|</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">Response</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.Response.make", "modulename": "python3-10.pyscalpel", "qualname": "Response.make", "kind": "function", "doc": "<p>Simplified API for creating response objects.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">status_code</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">200</span>,</span><span class=\"param\">\t<span class=\"n\">content</span><span class=\"p\">:</span> <span class=\"nb\">bytes</span> <span class=\"o\">|</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"sa\">b</span><span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">headers</span><span class=\"p\">:</span> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">headers</span><span class=\"o\">.</span><span class=\"n\">Headers</span> <span class=\"o\">|</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">bytes</span><span class=\"p\">,</span> <span class=\"nb\">bytes</span><span class=\"p\">],</span> <span class=\"o\">...</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">()</span>,</span><span class=\"param\">\t<span class=\"n\">host</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">port</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">scheme</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;http&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;https&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;http&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">Response</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.Response.host_is", "modulename": "python3-10.pyscalpel", "qualname": "Response.host_is", "kind": "function", "doc": "<p>Matches the host against the provided patterns</p>\n\n<p>Returns:\n    bool: Whether at least one pattern matched</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">patterns</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.Response.body", "modulename": "python3-10.pyscalpel", "qualname": "Response.body", "kind": "variable", "doc": "<p>Alias for content()</p>\n\n<p>Returns:\n    bytes | None: The request body / content</p>\n", "annotation": ": bytes | None"}, {"fullname": "python3-10.pyscalpel.Flow", "modulename": "python3-10.pyscalpel", "qualname": "Flow", "kind": "class", "doc": "<p>Contains request and response and some utilities for match()</p>\n"}, {"fullname": "python3-10.pyscalpel.Flow.__init__", "modulename": "python3-10.pyscalpel", "qualname": "Flow.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">scheme</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;http&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;https&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;http&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">host</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">port</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">request</span><span class=\"p\">:</span> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">Request</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">response</span><span class=\"p\">:</span> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">Response</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"nb\">bytes</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "python3-10.pyscalpel.Flow.scheme", "modulename": "python3-10.pyscalpel", "qualname": "Flow.scheme", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "python3-10.pyscalpel.Flow.host", "modulename": "python3-10.pyscalpel", "qualname": "Flow.host", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "python3-10.pyscalpel.Flow.port", "modulename": "python3-10.pyscalpel", "qualname": "Flow.port", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "python3-10.pyscalpel.Flow.request", "modulename": "python3-10.pyscalpel", "qualname": "Flow.request", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "python3-10.pyscalpel.Flow.response", "modulename": "python3-10.pyscalpel", "qualname": "Flow.response", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "python3-10.pyscalpel.Flow.text", "modulename": "python3-10.pyscalpel", "qualname": "Flow.text", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "python3-10.pyscalpel.Flow.host_is", "modulename": "python3-10.pyscalpel", "qualname": "Flow.host_is", "kind": "function", "doc": "<p>Matches a wildcard pattern against the target host</p>\n\n<p>Returns:\n    bool: True if at least one pattern matched</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">patterns</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.Flow.path_is", "modulename": "python3-10.pyscalpel", "qualname": "Flow.path_is", "kind": "function", "doc": "<p>Matches a wildcard pattern against the request path</p>\n\n<p>Includes query string <code>?</code> and fragment <code>#</code></p>\n\n<p>Returns:\n    bool: True if at least one pattern matched</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">patterns</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.ctx", "modulename": "python3-10.pyscalpel", "qualname": "ctx", "kind": "variable", "doc": "<p>The Scalpel Python execution context</p>\n\n<p>Contains the Burp Java API object, the venv directory, the user script path,\nthe path to the file loading the user script and a logging object</p>\n", "annotation": ": pyscalpel.java.scalpel_types.context.Context", "default_value": "{}"}, {"fullname": "python3-10.pyscalpel.Context", "modulename": "python3-10.pyscalpel", "qualname": "Context", "kind": "class", "doc": "<p>Scalpel Python execution context</p>\n", "bases": "typing.TypedDict"}, {"fullname": "python3-10.pyscalpel.Context.API", "modulename": "python3-10.pyscalpel", "qualname": "Context.API", "kind": "variable", "doc": "<p>The Burp [Montoya API]\n(<a href=\"https://portswigger.github.io/burp-extensions-montoya-api/javadoc/burp/api/montoya/MontoyaApi.html\">https://portswigger.github.io/burp-extensions-montoya-api/javadoc/burp/api/montoya/MontoyaApi.html</a>)\nroot object.</p>\n\n<p>Allows you to interact with Burp by directly manipulating the Java object.</p>\n", "annotation": ": Any"}, {"fullname": "python3-10.pyscalpel.Context.directory", "modulename": "python3-10.pyscalpel", "qualname": "Context.directory", "kind": "variable", "doc": "<p>The framework directory</p>\n", "annotation": ": str"}, {"fullname": "python3-10.pyscalpel.Context.user_script", "modulename": "python3-10.pyscalpel", "qualname": "Context.user_script", "kind": "variable", "doc": "<p>The loaded script path</p>\n", "annotation": ": str"}, {"fullname": "python3-10.pyscalpel.Context.framework", "modulename": "python3-10.pyscalpel", "qualname": "Context.framework", "kind": "variable", "doc": "<p>The framework (loader script) path</p>\n", "annotation": ": str"}, {"fullname": "python3-10.pyscalpel.Context.venv", "modulename": "python3-10.pyscalpel", "qualname": "Context.venv", "kind": "variable", "doc": "<p>The venv the script was loaded in</p>\n", "annotation": ": str"}, {"fullname": "python3-10.pyscalpel.MatchEvent", "modulename": "python3-10.pyscalpel", "qualname": "MatchEvent", "kind": "variable", "doc": "<p></p>\n", "default_value": "typing.Literal[&#x27;request&#x27;, &#x27;response&#x27;, &#x27;req_edit_in&#x27;, &#x27;req_edit_out&#x27;, &#x27;res_edit_in&#x27;, &#x27;res_edit_out&#x27;]"}, {"fullname": "python3-10.pyscalpel.editor", "modulename": "python3-10.pyscalpel", "qualname": "editor", "kind": "function", "doc": "<p>Decorator to specify the editor type for a given hook</p>\n\n<p>This can be applied to a req_edit_in / res_edit_in hook declaration to specify the editor that should be displayed in Burp</p>\n\n<p>Example:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>    <span class=\"nd\">@editor</span><span class=\"p\">(</span><span class=\"s2\">&quot;hex&quot;</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">req_edit_in</span><span class=\"p\">(</span><span class=\"n\">req</span><span class=\"p\">:</span> <span class=\"n\">Request</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">bytes</span> <span class=\"o\">|</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"nb\">bytes</span><span class=\"p\">(</span><span class=\"n\">req</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p>This displays the request in an hex editor.</p>\n\n<p>Currently, the only modes supported are <code>\"raw\"</code>, <code>\"hex\"</code>, <code>\"octal\"</code>, <code>\"binary\"</code> and <code>\"decimal\"</code>.</p>\n\n<p>Args:\n    mode (EDITOR_MODE): The editor mode (raw, hex,...)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">mode</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;raw&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;hex&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;octal&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;binary&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decimal&#39;</span><span class=\"p\">]</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.Logger", "modulename": "python3-10.pyscalpel", "qualname": "Logger", "kind": "class", "doc": "<p>Provides methods for logging messages to the Burp Suite output and standard streams.</p>\n"}, {"fullname": "python3-10.pyscalpel.Logger.all", "modulename": "python3-10.pyscalpel", "qualname": "Logger.all", "kind": "function", "doc": "<p>Prints the message to the standard output</p>\n\n<p>Args:\n    msg (str): The message to print</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">msg</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.Logger.trace", "modulename": "python3-10.pyscalpel", "qualname": "Logger.trace", "kind": "function", "doc": "<p>Prints the message to the standard output</p>\n\n<p>Args:\n    msg (str): The message to print</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">msg</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.Logger.debug", "modulename": "python3-10.pyscalpel", "qualname": "Logger.debug", "kind": "function", "doc": "<p>Prints the message to the standard output</p>\n\n<p>Args:\n    msg (str): The message to print</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">msg</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.Logger.info", "modulename": "python3-10.pyscalpel", "qualname": "Logger.info", "kind": "function", "doc": "<p>Prints the message to the standard output</p>\n\n<p>Args:\n    msg (str): The message to print</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">msg</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.Logger.warn", "modulename": "python3-10.pyscalpel", "qualname": "Logger.warn", "kind": "function", "doc": "<p>Prints the message to the standard output</p>\n\n<p>Args:\n    msg (str): The message to print</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">msg</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.Logger.fatal", "modulename": "python3-10.pyscalpel", "qualname": "Logger.fatal", "kind": "function", "doc": "<p>Prints the message to the standard output</p>\n\n<p>Args:\n    msg (str): The message to print</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">msg</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.Logger.error", "modulename": "python3-10.pyscalpel", "qualname": "Logger.error", "kind": "function", "doc": "<p>Prints the message to the standard error</p>\n\n<p>Args:\n    msg (str): The message to print</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">msg</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.burp_utils", "modulename": "python3-10.pyscalpel.burp_utils", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "python3-10.pyscalpel.burp_utils.ctx", "modulename": "python3-10.pyscalpel.burp_utils", "qualname": "ctx", "kind": "variable", "doc": "<p></p>\n", "default_value": "{}"}, {"fullname": "python3-10.pyscalpel.burp_utils.new_response", "modulename": "python3-10.pyscalpel.burp_utils", "qualname": "new_response", "kind": "function", "doc": "<p>Create a new HttpResponse from the given bytes</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">obj</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">ByteArrayConvertible</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">http_response</span><span class=\"o\">.</span><span class=\"n\">IHttpResponse</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.burp_utils.new_request", "modulename": "python3-10.pyscalpel.burp_utils", "qualname": "new_request", "kind": "function", "doc": "<p>Create a new HttpRequest from the given bytes</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">obj</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">ByteArrayConvertible</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">http_request</span><span class=\"o\">.</span><span class=\"n\">IHttpRequest</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.burp_utils.byte_array", "modulename": "python3-10.pyscalpel.burp_utils", "qualname": "byte_array", "kind": "function", "doc": "<p>Create a new <code>IByteArray</code> from the given bytes-like obbject</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">_bytes</span><span class=\"p\">:</span> <span class=\"nb\">bytes</span> <span class=\"o\">|</span> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">bytes</span><span class=\"o\">.</span><span class=\"n\">JavaBytes</span> <span class=\"o\">|</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"nb\">bytearray</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">byte_array</span><span class=\"o\">.</span><span class=\"n\">IByteArray</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.burp_utils.get_bytes", "modulename": "python3-10.pyscalpel.burp_utils", "qualname": "get_bytes", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">array</span><span class=\"p\">:</span> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">byte_array</span><span class=\"o\">.</span><span class=\"n\">IByteArray</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bytes</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.burp_utils.to_bytes", "modulename": "python3-10.pyscalpel.burp_utils", "qualname": "to_bytes", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">obj</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">ByteArraySerialisable</span><span class=\"p\">,</span> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">bytes</span><span class=\"o\">.</span><span class=\"n\">JavaBytes</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bytes</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.edit", "modulename": "python3-10.pyscalpel.edit", "kind": "module", "doc": "<p>Scalpel allows choosing between normal and binary editors,\nto do so, the user can apply the <code>editor</code> decorator to the <code>req_edit_in</code> / <code>res_edit_int</code> hook:</p>\n"}, {"fullname": "python3-10.pyscalpel.edit.EditorMode", "modulename": "python3-10.pyscalpel.edit", "qualname": "EditorMode", "kind": "variable", "doc": "<p></p>\n", "default_value": "typing.Literal[&#x27;raw&#x27;, &#x27;hex&#x27;, &#x27;octal&#x27;, &#x27;binary&#x27;, &#x27;decimal&#x27;]"}, {"fullname": "python3-10.pyscalpel.edit.EDITOR_MODES", "modulename": "python3-10.pyscalpel.edit", "qualname": "EDITOR_MODES", "kind": "variable", "doc": "<p></p>\n", "annotation": ": set[typing.Literal[&#x27;raw&#x27;, &#x27;hex&#x27;, &#x27;octal&#x27;, &#x27;binary&#x27;, &#x27;decimal&#x27;]]", "default_value": "{&#x27;raw&#x27;, &#x27;binary&#x27;, &#x27;octal&#x27;, &#x27;hex&#x27;, &#x27;decimal&#x27;}"}, {"fullname": "python3-10.pyscalpel.edit.editor", "modulename": "python3-10.pyscalpel.edit", "qualname": "editor", "kind": "function", "doc": "<p>Decorator to specify the editor type for a given hook</p>\n\n<p>This can be applied to a req_edit_in / res_edit_in hook declaration to specify the editor that should be displayed in Burp</p>\n\n<p>Example:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>    <span class=\"nd\">@editor</span><span class=\"p\">(</span><span class=\"s2\">&quot;hex&quot;</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">req_edit_in</span><span class=\"p\">(</span><span class=\"n\">req</span><span class=\"p\">:</span> <span class=\"n\">Request</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">bytes</span> <span class=\"o\">|</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"nb\">bytes</span><span class=\"p\">(</span><span class=\"n\">req</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p>This displays the request in an hex editor.</p>\n\n<p>Currently, the only modes supported are <code>\"raw\"</code>, <code>\"hex\"</code>, <code>\"octal\"</code>, <code>\"binary\"</code> and <code>\"decimal\"</code>.</p>\n\n<p>Args:\n    mode (EDITOR_MODE): The editor mode (raw, hex,...)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">mode</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;raw&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;hex&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;octal&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;binary&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;decimal&#39;</span><span class=\"p\">]</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.encoding", "modulename": "python3-10.pyscalpel.encoding", "kind": "module", "doc": "<p>Utilities for encoding data.</p>\n"}, {"fullname": "python3-10.pyscalpel.encoding.always_bytes", "modulename": "python3-10.pyscalpel.encoding", "qualname": "always_bytes", "kind": "function", "doc": "<p>Convert data to bytes</p>\n\n<p>Args:\n    data (str | bytes | int): The data to convert</p>\n\n<p>Returns:\n    bytes: The converted bytes</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"nb\">bytes</span> <span class=\"o\">|</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">encoding</span><span class=\"o\">=</span><span class=\"s1\">&#39;latin-1&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bytes</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.encoding.always_str", "modulename": "python3-10.pyscalpel.encoding", "qualname": "always_str", "kind": "function", "doc": "<p>Convert data to string</p>\n\n<p>Args:\n    data (str | bytes | int): The data to convert</p>\n\n<p>Returns:\n    str: The converted string</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"nb\">bytes</span> <span class=\"o\">|</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">encoding</span><span class=\"o\">=</span><span class=\"s1\">&#39;latin-1&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.encoding.urlencode_all", "modulename": "python3-10.pyscalpel.encoding", "qualname": "urlencode_all", "kind": "function", "doc": "<p>URL Encode all bytes in the given bytes object</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"nb\">bytes</span> <span class=\"o\">|</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">encoding</span><span class=\"o\">=</span><span class=\"s1\">&#39;latin-1&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bytes</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.encoding.urldecode", "modulename": "python3-10.pyscalpel.encoding", "qualname": "urldecode", "kind": "function", "doc": "<p>URL Decode all bytes in the given bytes object</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"nb\">bytes</span> <span class=\"o\">|</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">encoding</span><span class=\"o\">=</span><span class=\"s1\">&#39;latin-1&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bytes</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.http", "modulename": "python3-10.pyscalpel.http", "kind": "module", "doc": "<p>This module contains objects representing HTTP objects passed to the user's hooks</p>\n"}, {"fullname": "python3-10.pyscalpel.http.Request", "modulename": "python3-10.pyscalpel.http", "qualname": "Request", "kind": "class", "doc": "<p>A \"Burp oriented\" HTTP request class</p>\n\n<p>This class allows to manipulate Burp requests in a Pythonic way.</p>\n"}, {"fullname": "python3-10.pyscalpel.http.Request.__init__", "modulename": "python3-10.pyscalpel.http", "qualname": "Request.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">method</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">scheme</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;http&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;https&#39;</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">host</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">port</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">http_version</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">headers</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">headers</span><span class=\"o\">.</span><span class=\"n\">Headers</span><span class=\"p\">,</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">bytes</span><span class=\"p\">,</span> <span class=\"nb\">bytes</span><span class=\"p\">],</span> <span class=\"o\">...</span><span class=\"p\">],</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">bytes</span><span class=\"p\">,</span> <span class=\"nb\">bytes</span><span class=\"p\">]]]</span>,</span><span class=\"param\">\t<span class=\"n\">authority</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">content</span><span class=\"p\">:</span> <span class=\"nb\">bytes</span> <span class=\"o\">|</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "python3-10.pyscalpel.http.Request.host", "modulename": "python3-10.pyscalpel.http", "qualname": "Request.host", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "python3-10.pyscalpel.http.Request.port", "modulename": "python3-10.pyscalpel.http", "qualname": "Request.port", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "python3-10.pyscalpel.http.Request.method", "modulename": "python3-10.pyscalpel.http", "qualname": "Request.method", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "python3-10.pyscalpel.http.Request.scheme", "modulename": "python3-10.pyscalpel.http", "qualname": "Request.scheme", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Literal[&#x27;http&#x27;, &#x27;https&#x27;]"}, {"fullname": "python3-10.pyscalpel.http.Request.authority", "modulename": "python3-10.pyscalpel.http", "qualname": "Request.authority", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "python3-10.pyscalpel.http.Request.path", "modulename": "python3-10.pyscalpel.http", "qualname": "Request.path", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "python3-10.pyscalpel.http.Request.http_version", "modulename": "python3-10.pyscalpel.http", "qualname": "Request.http_version", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "python3-10.pyscalpel.http.Request.update_content_length", "modulename": "python3-10.pyscalpel.http", "qualname": "Request.update_content_length", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "True"}, {"fullname": "python3-10.pyscalpel.http.Request.headers", "modulename": "python3-10.pyscalpel.http", "qualname": "Request.headers", "kind": "variable", "doc": "<p>The request HTTP headers</p>\n\n<p>Returns:\n    Headers: a case insensitive dict containing the HTTP headers</p>\n", "annotation": ": pyscalpel.http.headers.Headers"}, {"fullname": "python3-10.pyscalpel.http.Request.make", "modulename": "python3-10.pyscalpel.http", "qualname": "Request.make", "kind": "function", "doc": "<p>Create a request from an URL</p>\n\n<p>Args:\n    method (str): The request method (GET,POST,PUT,PATCH, DELETE,TRACE,...)\n    url (str): The request URL\n    content (bytes | str, optional): The request content. Defaults to \"\".\n    headers (Headers, optional): The request headers. Defaults to ().</p>\n\n<p>Returns:\n    Request: The HTTP request</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">method</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">content</span><span class=\"p\">:</span> <span class=\"nb\">bytes</span> <span class=\"o\">|</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">headers</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">headers</span><span class=\"o\">.</span><span class=\"n\">Headers</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"nb\">bytes</span><span class=\"p\">,</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"nb\">bytes</span><span class=\"p\">],</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">bytes</span><span class=\"p\">,</span> <span class=\"nb\">bytes</span><span class=\"p\">],</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">bytes</span><span class=\"p\">,</span> <span class=\"nb\">bytes</span><span class=\"p\">]]]</span> <span class=\"o\">=</span> <span class=\"p\">()</span></span><span class=\"return-annotation\">) -> <span class=\"n\">python3</span><span class=\"o\">-</span><span class=\"mf\">10.</span><span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">Request</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.http.Request.from_burp", "modulename": "python3-10.pyscalpel.http", "qualname": "Request.from_burp", "kind": "function", "doc": "<p>Construct an instance of the Request class from a Burp suite HttpRequest.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>request</strong>:  The Burp suite HttpRequest to convert.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A Request with the same data as the Burp suite HttpRequest.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">request</span><span class=\"p\">:</span> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">http_request</span><span class=\"o\">.</span><span class=\"n\">IHttpRequest</span>,</span><span class=\"param\">\t<span class=\"n\">service</span><span class=\"p\">:</span> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">http_service</span><span class=\"o\">.</span><span class=\"n\">IHttpService</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">python3</span><span class=\"o\">-</span><span class=\"mf\">10.</span><span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">Request</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.http.Request.to_burp", "modulename": "python3-10.pyscalpel.http", "qualname": "Request.to_burp", "kind": "function", "doc": "<p>Convert the request to a Burp suite <code>IHttpRequest</code>.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The request as a Burp suite <code>IHttpRequest</code>.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">http_request</span><span class=\"o\">.</span><span class=\"n\">IHttpRequest</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.http.Request.from_raw", "modulename": "python3-10.pyscalpel.http", "qualname": "Request.from_raw", "kind": "function", "doc": "<p>Construct an instance of the Request class from raw bytes.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>data</strong>:  The raw bytes to convert.</li>\n<li><strong>real_host</strong>:  The real host to connect to.</li>\n<li><strong>port</strong>:  The port of the request.</li>\n<li><strong>scheme</strong>:  The scheme of the request.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A <code>Request</code> with the same data as the raw bytes.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"nb\">bytes</span> <span class=\"o\">|</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">real_host</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">port</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">scheme</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;http&#39;</span><span class=\"p\">],</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;https&#39;</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;http&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">python3</span><span class=\"o\">-</span><span class=\"mf\">10.</span><span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">Request</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.http.Request.url", "modulename": "python3-10.pyscalpel.http", "qualname": "Request.url", "kind": "variable", "doc": "<p>The full URL string, constructed from <code>Request.scheme</code>,\n    <code>Request.host</code>, <code>Request.port</code> and <code>Request.path</code>.</p>\n\n<p>Setting this property updates these attributes as well.</p>\n", "annotation": ": str"}, {"fullname": "python3-10.pyscalpel.http.Request.query", "modulename": "python3-10.pyscalpel.http", "qualname": "Request.query", "kind": "variable", "doc": "<p>The query string parameters as a dict-like object</p>\n\n<p>Returns:\n    QueryParamsView: The query string parameters</p>\n", "annotation": ": pyscalpel.http.body.urlencoded.URLEncodedFormView"}, {"fullname": "python3-10.pyscalpel.http.Request.content", "modulename": "python3-10.pyscalpel.http", "qualname": "Request.content", "kind": "variable", "doc": "<p>The request content / body as raw bytes</p>\n\n<p>Returns:\n    bytes | None: The content if it exists</p>\n", "annotation": ": bytes | None"}, {"fullname": "python3-10.pyscalpel.http.Request.body", "modulename": "python3-10.pyscalpel.http", "qualname": "Request.body", "kind": "variable", "doc": "<p>Alias for content()</p>\n\n<p>Returns:\n    bytes | None: The request body / content</p>\n", "annotation": ": bytes | None"}, {"fullname": "python3-10.pyscalpel.http.Request.update_serializer_from_content_type", "modulename": "python3-10.pyscalpel.http", "qualname": "Request.update_serializer_from_content_type", "kind": "function", "doc": "<p>Update the form parsing based on the given Content-Type</p>\n\n<p>Args:\n    content_type (ImplementedContentTypesTp | str | None, optional): The form content-type. Defaults to None.\n    fail_silently (bool, optional): Determine if an excpetion is raised when the content-type is unknown. Defaults to False.</p>\n\n<p>Raises:\n    FormNotParsedException: Raised when the content-type is unknown.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">content_type</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;application/x-www-form-urlencoded&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;application/json&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;multipart/form-data&#39;</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">fail_silently</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.http.Request.content_type", "modulename": "python3-10.pyscalpel.http", "qualname": "Request.content_type", "kind": "variable", "doc": "<p>The Content-Type header value.</p>\n\n<p>Returns:\n    str | None: &lt;=&gt; self.headers.get(\"Content-Type\")</p>\n", "annotation": ": str | None"}, {"fullname": "python3-10.pyscalpel.http.Request.create_defaultform", "modulename": "python3-10.pyscalpel.http", "qualname": "Request.create_defaultform", "kind": "function", "doc": "<p>Creates the form if it doesn't exist, else returns the existing one</p>\n\n<p>Args:\n    content_type (IMPLEMENTED_CONTENT_TYPES_TP | None, optional): The form content-type. Defaults to None.\n    update_header (bool, optional): Whether to update the header. Defaults to True.</p>\n\n<p>Raises:\n    FormNotParsedException: Thrown when provided content-type has no implemented form-serializer\n    FormNotParsedException: Thrown when the raw content could not be parsed.</p>\n\n<p>Returns:\n    MutableMapping[Any, Any]: The mapped form.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">content_type</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;application/x-www-form-urlencoded&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;application/json&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;multipart/form-data&#39;</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">update_header</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">MutableMapping</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.http.Request.form", "modulename": "python3-10.pyscalpel.http", "qualname": "Request.form", "kind": "variable", "doc": "<p>Mapping from content parsed accordingly to Content-Type</p>\n\n<p>Raises:\n    FormNotParsedException: The content could not be parsed accordingly to Content-Type</p>\n\n<p>Returns:\n    MutableMapping[Any, Any]: The mapped request form</p>\n", "annotation": ": MutableMapping[Any, Any]"}, {"fullname": "python3-10.pyscalpel.http.Request.urlencoded_form", "modulename": "python3-10.pyscalpel.http", "qualname": "Request.urlencoded_form", "kind": "variable", "doc": "<p>The urlencoded form data</p>\n\n<p>Converts the content to the urlencoded form format if needed.\nModification to this object will update Request.content and vice versa</p>\n\n<p>Returns:\n    QueryParams: The urlencoded form data</p>\n", "annotation": ": pyscalpel.http.body.urlencoded.URLEncodedForm"}, {"fullname": "python3-10.pyscalpel.http.Request.json_form", "modulename": "python3-10.pyscalpel.http", "qualname": "Request.json_form", "kind": "variable", "doc": "<p>The JSON form data</p>\n\n<p>Converts the content to the JSON form format if needed.\nModification to this object will update Request.content and vice versa</p>\n\n<p>Returns:\n  dict[JSON_KEY_TYPES, JSON_VALUE_TYPES]: The JSON form data</p>\n", "annotation": ": dict[str | int | float, str | int | float | bool | None | list[str | int | float | bool | None | list[ForwardRef(&#x27;JSON_VALUE_TYPES&#x27;)] | dict[str | int | float, ForwardRef(&#x27;JSON_VALUE_TYPES&#x27;)]] | dict[str | int | float, str | int | float | bool | None | list[ForwardRef(&#x27;JSON_VALUE_TYPES&#x27;)] | dict[str | int | float, ForwardRef(&#x27;JSON_VALUE_TYPES&#x27;)]]]"}, {"fullname": "python3-10.pyscalpel.http.Request.multipart_form", "modulename": "python3-10.pyscalpel.http", "qualname": "Request.multipart_form", "kind": "variable", "doc": "<p>The multipart form data</p>\n\n<p>Converts the content to the multipart form format if needed.\nModification to this object will update Request.content and vice versa</p>\n\n<p>Returns:\n    MultiPartForm</p>\n", "annotation": ": pyscalpel.http.body.multipart.MultiPartForm"}, {"fullname": "python3-10.pyscalpel.http.Request.cookies", "modulename": "python3-10.pyscalpel.http", "qualname": "Request.cookies", "kind": "variable", "doc": "<p>The request cookies.\nFor the most part, this behaves like a dictionary.\nModifications to the MultiDictView update <code>Request.headers</code>, and vice versa.</p>\n", "annotation": ": _internal_mitmproxy.coretypes.multidict.MultiDictView[str, str]"}, {"fullname": "python3-10.pyscalpel.http.Request.host_header", "modulename": "python3-10.pyscalpel.http", "qualname": "Request.host_header", "kind": "variable", "doc": "<p>Host header value</p>\n\n<p>Returns:\n    str | None: The host header value</p>\n", "annotation": ": str | None"}, {"fullname": "python3-10.pyscalpel.http.Request.text", "modulename": "python3-10.pyscalpel.http", "qualname": "Request.text", "kind": "function", "doc": "<p>The decoded content</p>\n\n<p>Args:\n    encoding (str, optional): encoding to use. Defaults to \"utf-8\".</p>\n\n<p>Returns:\n    str: The decoded content</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">encoding</span><span class=\"o\">=</span><span class=\"s1\">&#39;utf-8&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.http.Request.content_length", "modulename": "python3-10.pyscalpel.http", "qualname": "Request.content_length", "kind": "variable", "doc": "<p>Returns the Content-Length header value\n   Returns 0 if the header is absent</p>\n\n<p>Args:\n    value (int | str): The Content-Length value</p>\n\n<p>Raises:\n    RuntimeError: Throws RuntimeError when the value is invalid</p>\n", "annotation": ": int"}, {"fullname": "python3-10.pyscalpel.http.Request.pretty_host", "modulename": "python3-10.pyscalpel.http", "qualname": "Request.pretty_host", "kind": "variable", "doc": "<p>Returns the most approriate host\nReturns self.host when it exists, else it returns self.host_header</p>\n\n<p>Returns:\n    str: The request target host</p>\n", "annotation": ": str"}, {"fullname": "python3-10.pyscalpel.http.Request.host_is", "modulename": "python3-10.pyscalpel.http", "qualname": "Request.host_is", "kind": "function", "doc": "<p>Perform wildcard matching (fnmatch) on the target host.</p>\n\n<p>Args:\n    pattern (str): The pattern to use</p>\n\n<p>Returns:\n    bool: Whether the pattern matches</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">patterns</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.http.Request.path_is", "modulename": "python3-10.pyscalpel.http", "qualname": "Request.path_is", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">patterns</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.http.Response", "modulename": "python3-10.pyscalpel.http", "qualname": "Response", "kind": "class", "doc": "<p>A \"Burp oriented\" HTTP response class</p>\n\n<p>This class allows to manipulate Burp responses in a Pythonic way.</p>\n\n<p>Fields:\n    scheme: http or https\n    host: The initiating request target host\n    port: The initiating request target port\n    request: The initiating request.</p>\n", "bases": "_internal_mitmproxy.http.Response"}, {"fullname": "python3-10.pyscalpel.http.Response.__init__", "modulename": "python3-10.pyscalpel.http", "qualname": "Response.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">http_version</span><span class=\"p\">:</span> <span class=\"nb\">bytes</span>,</span><span class=\"param\">\t<span class=\"n\">status_code</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">reason</span><span class=\"p\">:</span> <span class=\"nb\">bytes</span>,</span><span class=\"param\">\t<span class=\"n\">headers</span><span class=\"p\">:</span> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">headers</span><span class=\"o\">.</span><span class=\"n\">Headers</span> <span class=\"o\">|</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">bytes</span><span class=\"p\">,</span> <span class=\"nb\">bytes</span><span class=\"p\">],</span> <span class=\"o\">...</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">content</span><span class=\"p\">:</span> <span class=\"nb\">bytes</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">trailers</span><span class=\"p\">:</span> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">headers</span><span class=\"o\">.</span><span class=\"n\">Headers</span> <span class=\"o\">|</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">bytes</span><span class=\"p\">,</span> <span class=\"nb\">bytes</span><span class=\"p\">],</span> <span class=\"o\">...</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">scheme</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;http&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;https&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;http&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">host</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">port</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span></span>)</span>"}, {"fullname": "python3-10.pyscalpel.http.Response.scheme", "modulename": "python3-10.pyscalpel.http", "qualname": "Response.scheme", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Literal[&#x27;http&#x27;, &#x27;https&#x27;]", "default_value": "&#x27;http&#x27;"}, {"fullname": "python3-10.pyscalpel.http.Response.host", "modulename": "python3-10.pyscalpel.http", "qualname": "Response.host", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;&#x27;"}, {"fullname": "python3-10.pyscalpel.http.Response.port", "modulename": "python3-10.pyscalpel.http", "qualname": "Response.port", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "0"}, {"fullname": "python3-10.pyscalpel.http.Response.request", "modulename": "python3-10.pyscalpel.http", "qualname": "Response.request", "kind": "variable", "doc": "<p></p>\n", "annotation": ": pyscalpel.http.request.Request | None", "default_value": "None"}, {"fullname": "python3-10.pyscalpel.http.Response.from_mitmproxy", "modulename": "python3-10.pyscalpel.http", "qualname": "Response.from_mitmproxy", "kind": "function", "doc": "<p>Construct an instance of the Response class from a <a href=\"https://docs.mitmproxy.org/stable/api/mitmproxy/http.html#Response\">mitmproxy.http.HTTPResponse</a>.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li>**response: The <a href=\"https**: //docs.mitmproxy.org/stable/api/mitmproxy/http.html#Response\">mitmproxy.http.HTTPResponse</a> to convert.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A <code>Response</code> with the same data as the <a href=\"https://docs.mitmproxy.org/stable/api/mitmproxy/http.html#Response\">mitmproxy.http.HTTPResponse</a>.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">response</span><span class=\"p\">:</span> <span class=\"n\">_internal_mitmproxy</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">Response</span></span><span class=\"return-annotation\">) -> <span class=\"n\">python3</span><span class=\"o\">-</span><span class=\"mf\">10.</span><span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">Response</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.http.Response.from_burp", "modulename": "python3-10.pyscalpel.http", "qualname": "Response.from_burp", "kind": "function", "doc": "<p>Construct an instance of the Response class from a Burp suite <code>IHttpResponse</code>.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">response</span><span class=\"p\">:</span> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">http_response</span><span class=\"o\">.</span><span class=\"n\">IHttpResponse</span>,</span><span class=\"param\">\t<span class=\"n\">service</span><span class=\"p\">:</span> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">http_service</span><span class=\"o\">.</span><span class=\"n\">IHttpService</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">request</span><span class=\"p\">:</span> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">http_request</span><span class=\"o\">.</span><span class=\"n\">IHttpRequest</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">python3</span><span class=\"o\">-</span><span class=\"mf\">10.</span><span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">Response</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.http.Response.to_burp", "modulename": "python3-10.pyscalpel.http", "qualname": "Response.to_burp", "kind": "function", "doc": "<p>Convert the response to a Burp suite <code>IHttpResponse</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">http_response</span><span class=\"o\">.</span><span class=\"n\">IHttpResponse</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.http.Response.from_raw", "modulename": "python3-10.pyscalpel.http", "qualname": "Response.from_raw", "kind": "function", "doc": "<p>Construct an instance of the Response class from raw bytes.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>data</strong>:  The raw bytes to convert.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A <code>Response</code> parsed from the raw bytes.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"nb\">bytes</span> <span class=\"o\">|</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">python3</span><span class=\"o\">-</span><span class=\"mf\">10.</span><span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">Response</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.http.Response.make", "modulename": "python3-10.pyscalpel.http", "qualname": "Response.make", "kind": "function", "doc": "<p>Simplified API for creating response objects.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">status_code</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">200</span>,</span><span class=\"param\">\t<span class=\"n\">content</span><span class=\"p\">:</span> <span class=\"nb\">bytes</span> <span class=\"o\">|</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"sa\">b</span><span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">headers</span><span class=\"p\">:</span> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">headers</span><span class=\"o\">.</span><span class=\"n\">Headers</span> <span class=\"o\">|</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">bytes</span><span class=\"p\">,</span> <span class=\"nb\">bytes</span><span class=\"p\">],</span> <span class=\"o\">...</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">()</span>,</span><span class=\"param\">\t<span class=\"n\">host</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">port</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">scheme</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;http&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;https&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;http&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">python3</span><span class=\"o\">-</span><span class=\"mf\">10.</span><span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">Response</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.http.Response.host_is", "modulename": "python3-10.pyscalpel.http", "qualname": "Response.host_is", "kind": "function", "doc": "<p>Matches the host against the provided patterns</p>\n\n<p>Returns:\n    bool: Whether at least one pattern matched</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">patterns</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.http.Response.body", "modulename": "python3-10.pyscalpel.http", "qualname": "Response.body", "kind": "variable", "doc": "<p>Alias for content()</p>\n\n<p>Returns:\n    bytes | None: The request body / content</p>\n", "annotation": ": bytes | None"}, {"fullname": "python3-10.pyscalpel.http.Headers", "modulename": "python3-10.pyscalpel.http", "qualname": "Headers", "kind": "class", "doc": "<p>A wrapper around the MITMProxy Headers.</p>\n\n<p>This class provides additional methods for converting headers between Burp suite and MITMProxy formats.</p>\n", "bases": "_internal_mitmproxy.coretypes.multidict._MultiDict[~KT, ~VT], _internal_mitmproxy.coretypes.serializable.Serializable"}, {"fullname": "python3-10.pyscalpel.http.Headers.__init__", "modulename": "python3-10.pyscalpel.http", "qualname": "Headers.__init__", "kind": "function", "doc": "<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>fields</strong>:  The headers to construct the from.</li>\n<li><strong>headers</strong>:  The headers to construct the from.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">fields</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">bytes</span><span class=\"p\">,</span> <span class=\"nb\">bytes</span><span class=\"p\">]]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">headers</span></span>)</span>"}, {"fullname": "python3-10.pyscalpel.http.Headers.from_mitmproxy", "modulename": "python3-10.pyscalpel.http", "qualname": "Headers.from_mitmproxy", "kind": "function", "doc": "<p>Creates a <code>Headers</code> from a <code>mitmproxy.http.Headers</code>.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>headers</strong>:  The <code>mitmproxy.http.Headers</code> to convert.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A <code>Headers</code> with the same headers as the <code>mitmproxy.http.Headers</code>.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">headers</span><span class=\"p\">:</span> <span class=\"n\">_internal_mitmproxy</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">Headers</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">headers</span><span class=\"o\">.</span><span class=\"n\">Headers</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.http.Headers.from_burp", "modulename": "python3-10.pyscalpel.http", "qualname": "Headers.from_burp", "kind": "function", "doc": "<p>Construct an instance of the Headers class from a Burp suite HttpHeader array.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>headers</strong>:  The Burp suite HttpHeader array to convert.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A Headers with the same headers as the Burp suite HttpHeader array.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">headers</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">http_header</span><span class=\"o\">.</span><span class=\"n\">IHttpHeader</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">headers</span><span class=\"o\">.</span><span class=\"n\">Headers</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.http.Headers.to_burp", "modulename": "python3-10.pyscalpel.http", "qualname": "Headers.to_burp", "kind": "function", "doc": "<p>Convert the headers to a Burp suite HttpHeader array.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A Burp suite HttpHeader array.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">http_header</span><span class=\"o\">.</span><span class=\"n\">IHttpHeader</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.http.Flow", "modulename": "python3-10.pyscalpel.http", "qualname": "Flow", "kind": "class", "doc": "<p>Contains request and response and some utilities for match()</p>\n"}, {"fullname": "python3-10.pyscalpel.http.Flow.__init__", "modulename": "python3-10.pyscalpel.http", "qualname": "Flow.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">scheme</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;http&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;https&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;http&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">host</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">port</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">request</span><span class=\"p\">:</span> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">Request</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">response</span><span class=\"p\">:</span> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">Response</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"nb\">bytes</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "python3-10.pyscalpel.http.Flow.scheme", "modulename": "python3-10.pyscalpel.http", "qualname": "Flow.scheme", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "python3-10.pyscalpel.http.Flow.host", "modulename": "python3-10.pyscalpel.http", "qualname": "Flow.host", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "python3-10.pyscalpel.http.Flow.port", "modulename": "python3-10.pyscalpel.http", "qualname": "Flow.port", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "python3-10.pyscalpel.http.Flow.request", "modulename": "python3-10.pyscalpel.http", "qualname": "Flow.request", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "python3-10.pyscalpel.http.Flow.response", "modulename": "python3-10.pyscalpel.http", "qualname": "Flow.response", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "python3-10.pyscalpel.http.Flow.text", "modulename": "python3-10.pyscalpel.http", "qualname": "Flow.text", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "python3-10.pyscalpel.http.Flow.host_is", "modulename": "python3-10.pyscalpel.http", "qualname": "Flow.host_is", "kind": "function", "doc": "<p>Matches a wildcard pattern against the target host</p>\n\n<p>Returns:\n    bool: True if at least one pattern matched</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">patterns</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.http.Flow.path_is", "modulename": "python3-10.pyscalpel.http", "qualname": "Flow.path_is", "kind": "function", "doc": "<p>Matches a wildcard pattern against the request path</p>\n\n<p>Includes query string <code>?</code> and fragment <code>#</code></p>\n\n<p>Returns:\n    bool: True if at least one pattern matched</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">patterns</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.http.host_is", "modulename": "python3-10.pyscalpel.http", "qualname": "host_is", "kind": "function", "doc": "<p>Matches a host using unix-like wildcard matching against multiple patterns</p>\n\n<p>Args:\n    host (str): The host to match against\n    patterns (str): The patterns to use</p>\n\n<p>Returns:\n    bool: The match result (True if at least one pattern matches, else False)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">host</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">patterns</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.http.match_patterns", "modulename": "python3-10.pyscalpel.http", "qualname": "match_patterns", "kind": "function", "doc": "<p>Matches a string using unix-like wildcard matching against multiple patterns</p>\n\n<p>Args:\n    to_match (str): The string to match against\n    patterns (str): The patterns to use</p>\n\n<p>Returns:\n    bool: The match result (True if at least one pattern matches, else False)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">to_match</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">patterns</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.http.body", "modulename": "python3-10.pyscalpel.http.body", "kind": "module", "doc": "<p>Pentesters often have to manipulate form data in precise and extensive ways</p>\n\n<p>This module contains implementations for the most common forms (multipart,urlencoded, JSON)</p>\n\n<p>Users may be implement their own form by creating a Serializer,\nassigning the .serializer attribute in <code>Request</code> and using the \"form\" property</p>\n\n<p>Forms are designed to be convertible from one to another.</p>\n\n<p>For example, JSON forms may be converted to URL encoded forms\nby using the php query string syntax:</p>\n\n<p><code>{\"key1\": {\"key2\" : {\"key3\" : \"nested_value\"}}} -&gt; key1[key2][key3]=nested_value</code></p>\n\n<p>And vice-versa.</p>\n"}, {"fullname": "python3-10.pyscalpel.http.body.Form", "modulename": "python3-10.pyscalpel.http.body", "qualname": "Form", "kind": "class", "doc": "<p>A MutableMapping is a generic container for associating\nkey/value pairs.</p>\n\n<p>This class provides concrete generic implementations of all\nmethods except for __getitem__, __setitem__, __delitem__,\n__iter__, and __len__.</p>\n", "bases": "collections.abc.MutableMapping[~KT, ~VT]"}, {"fullname": "python3-10.pyscalpel.http.body.JSON_VALUE_TYPES", "modulename": "python3-10.pyscalpel.http.body", "qualname": "JSON_VALUE_TYPES", "kind": "variable", "doc": "<p></p>\n", "default_value": "str | int | float | bool | None | list[&#x27;JSON_VALUE_TYPES&#x27;] | dict[str | int | float, &#x27;JSON_VALUE_TYPES&#x27;]"}, {"fullname": "python3-10.pyscalpel.http.body.JSONForm", "modulename": "python3-10.pyscalpel.http.body", "qualname": "JSONForm", "kind": "class", "doc": "<p>Form representing a JSON object {}</p>\n\n<p>Implemented by a plain dict</p>\n\n<p>Args:\n    dict (_type_): A dict containing JSON-compatible types.</p>\n", "bases": "dict[str | int | float, str | int | float | bool | None | list['JSON_VALUE_TYPES'] | dict[str | int | float, 'JSON_VALUE_TYPES']]"}, {"fullname": "python3-10.pyscalpel.http.body.MultiPartForm", "modulename": "python3-10.pyscalpel.http.body", "qualname": "MultiPartForm", "kind": "class", "doc": "<p>This class represents a multipart/form-data request.</p>\n\n<p>It contains a collection of MultiPartFormField objects, providing methods\nto add, get, and delete form fields.</p>\n\n<p>The class also enables the conversion of the entire form\ninto bytes for transmission.</p>\n\n<ul>\n<li><p>Args:</p>\n\n<ul>\n<li>fields (Sequence[MultiPartFormField]): A sequence of MultiPartFormField objects that make up the form.</li>\n<li>content_type (str): The content type of the form.</li>\n<li>encoding (str): The encoding of the form.</li>\n</ul></li>\n<li><p>Raises:</p>\n\n<ul>\n<li>TypeError: Raised when an incorrect type is passed to MultiPartForm.set.</li>\n<li>KeyError: Raised when trying to access a field that does not exist in the form.</li>\n</ul></li>\n<li><p>Returns:</p>\n\n<ul>\n<li>MultiPartForm: An instance of the class representing a multipart/form-data request.</li>\n</ul></li>\n<li><p>Yields:</p>\n\n<ul>\n<li>Iterator[MultiPartFormField]: Yields each field in the form.</li>\n</ul></li>\n</ul>\n", "bases": "collections.abc.Mapping[str, pyscalpel.http.body.multipart.MultiPartFormField]"}, {"fullname": "python3-10.pyscalpel.http.body.MultiPartForm.__init__", "modulename": "python3-10.pyscalpel.http.body", "qualname": "MultiPartForm.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">fields</span><span class=\"p\">:</span> <span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">body</span><span class=\"o\">.</span><span class=\"n\">multipart</span><span class=\"o\">.</span><span class=\"n\">MultiPartFormField</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">content_type</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">encoding</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;utf-8&#39;</span></span>)</span>"}, {"fullname": "python3-10.pyscalpel.http.body.MultiPartForm.fields", "modulename": "python3-10.pyscalpel.http.body", "qualname": "MultiPartForm.fields", "kind": "variable", "doc": "<p></p>\n", "annotation": ": list[pyscalpel.http.body.multipart.MultiPartFormField]"}, {"fullname": "python3-10.pyscalpel.http.body.MultiPartForm.content_type", "modulename": "python3-10.pyscalpel.http.body", "qualname": "MultiPartForm.content_type", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "python3-10.pyscalpel.http.body.MultiPartForm.encoding", "modulename": "python3-10.pyscalpel.http.body", "qualname": "MultiPartForm.encoding", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "python3-10.pyscalpel.http.body.MultiPartForm.from_bytes", "modulename": "python3-10.pyscalpel.http.body", "qualname": "MultiPartForm.from_bytes", "kind": "function", "doc": "<p>Create a MultiPartForm by parsing a raw multipart form</p>\n\n<ul>\n<li><p>Args:</p>\n\n<ul>\n<li>content (bytes): The multipart form as raw bytes</li>\n<li>content_type (str): The Content-Type header with the corresponding boundary param (required).</li>\n<li>encoding (str, optional): The encoding to use (not required). Defaults to \"utf-8\".</li>\n</ul></li>\n<li><p>Returns:</p>\n\n<ul>\n<li>MultiPartForm: The parsed multipart form</li>\n</ul></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">content</span><span class=\"p\">:</span> <span class=\"nb\">bytes</span>,</span><span class=\"param\">\t<span class=\"n\">content_type</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">encoding</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;utf-8&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">body</span><span class=\"o\">.</span><span class=\"n\">multipart</span><span class=\"o\">.</span><span class=\"n\">MultiPartForm</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.http.body.MultiPartForm.boundary", "modulename": "python3-10.pyscalpel.http.body", "qualname": "MultiPartForm.boundary", "kind": "variable", "doc": "<p>Get the form multipart boundary</p>\n\n<p>Returns:\n    bytes: The multipart boundary</p>\n", "annotation": ": bytes"}, {"fullname": "python3-10.pyscalpel.http.body.MultiPartForm.get_all", "modulename": "python3-10.pyscalpel.http.body", "qualname": "MultiPartForm.get_all", "kind": "function", "doc": "<p>Return the list of all values for a given key.\nIf that key is not in the MultiDict, the return value will be an empty list.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">body</span><span class=\"o\">.</span><span class=\"n\">multipart</span><span class=\"o\">.</span><span class=\"n\">MultiPartFormField</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.http.body.MultiPartForm.del_all", "modulename": "python3-10.pyscalpel.http.body", "qualname": "MultiPartForm.del_all", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.http.body.MultiPartForm.set", "modulename": "python3-10.pyscalpel.http.body", "qualname": "MultiPartForm.set", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">_io</span><span class=\"o\">.</span><span class=\"n\">TextIOWrapper</span> <span class=\"o\">|</span> <span class=\"n\">_io</span><span class=\"o\">.</span><span class=\"n\">BufferedReader</span> <span class=\"o\">|</span> <span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">IOBase</span> <span class=\"o\">|</span> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">body</span><span class=\"o\">.</span><span class=\"n\">multipart</span><span class=\"o\">.</span><span class=\"n\">MultiPartFormField</span> <span class=\"o\">|</span> <span class=\"nb\">bytes</span> <span class=\"o\">|</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.http.body.MultiPartForm.setdefault", "modulename": "python3-10.pyscalpel.http.body", "qualname": "MultiPartForm.setdefault", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">default</span><span class=\"p\">:</span> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">body</span><span class=\"o\">.</span><span class=\"n\">multipart</span><span class=\"o\">.</span><span class=\"n\">MultiPartFormField</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">body</span><span class=\"o\">.</span><span class=\"n\">multipart</span><span class=\"o\">.</span><span class=\"n\">MultiPartFormField</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.http.body.MultiPartForm.insert", "modulename": "python3-10.pyscalpel.http.body", "qualname": "MultiPartForm.insert", "kind": "function", "doc": "<p>Insert an additional value for the given key at the specified position.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">index</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">body</span><span class=\"o\">.</span><span class=\"n\">multipart</span><span class=\"o\">.</span><span class=\"n\">MultiPartFormField</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.http.body.MultiPartForm.append", "modulename": "python3-10.pyscalpel.http.body", "qualname": "MultiPartForm.append", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">body</span><span class=\"o\">.</span><span class=\"n\">multipart</span><span class=\"o\">.</span><span class=\"n\">MultiPartFormField</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.http.body.MultiPartFormField", "modulename": "python3-10.pyscalpel.http.body", "qualname": "MultiPartFormField", "kind": "class", "doc": "<p>This class represents a field in a multipart/form-data request.</p>\n\n<p>It provides functionalities to create form fields from various inputs like raw body parts,\nfiles and manual construction with name, filename, body, and content type.</p>\n\n<p>It also offers properties and methods to interact with the form field's headers and content.</p>\n\n<p>Raises:\n    StopIteration: Raised when the specified Content-Disposition header is not found or could not be parsed.</p>\n\n<p>Returns:\n    MultiPartFormField: An instance of the class representing a form field in a multipart/form-data request.</p>\n"}, {"fullname": "python3-10.pyscalpel.http.body.MultiPartFormField.__init__", "modulename": "python3-10.pyscalpel.http.body", "qualname": "MultiPartFormField.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">headers</span><span class=\"p\">:</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">structures</span><span class=\"o\">.</span><span class=\"n\">CaseInsensitiveDict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">content</span><span class=\"p\">:</span> <span class=\"nb\">bytes</span> <span class=\"o\">=</span> <span class=\"sa\">b</span><span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">encoding</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;utf-8&#39;</span></span>)</span>"}, {"fullname": "python3-10.pyscalpel.http.body.MultiPartFormField.headers", "modulename": "python3-10.pyscalpel.http.body", "qualname": "MultiPartFormField.headers", "kind": "variable", "doc": "<p></p>\n", "annotation": ": requests.structures.CaseInsensitiveDict[str]"}, {"fullname": "python3-10.pyscalpel.http.body.MultiPartFormField.content", "modulename": "python3-10.pyscalpel.http.body", "qualname": "MultiPartFormField.content", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bytes"}, {"fullname": "python3-10.pyscalpel.http.body.MultiPartFormField.encoding", "modulename": "python3-10.pyscalpel.http.body", "qualname": "MultiPartFormField.encoding", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "python3-10.pyscalpel.http.body.MultiPartFormField.from_body_part", "modulename": "python3-10.pyscalpel.http.body", "qualname": "MultiPartFormField.from_body_part", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">body_part</span><span class=\"p\">:</span> <span class=\"n\">requests_toolbelt</span><span class=\"o\">.</span><span class=\"n\">multipart</span><span class=\"o\">.</span><span class=\"n\">decoder</span><span class=\"o\">.</span><span class=\"n\">BodyPart</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.http.body.MultiPartFormField.make", "modulename": "python3-10.pyscalpel.http.body", "qualname": "MultiPartFormField.make", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">filename</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">body</span><span class=\"p\">:</span> <span class=\"nb\">bytes</span> <span class=\"o\">=</span> <span class=\"sa\">b</span><span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">content_type</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">encoding</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;utf-8&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">body</span><span class=\"o\">.</span><span class=\"n\">multipart</span><span class=\"o\">.</span><span class=\"n\">MultiPartFormField</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.http.body.MultiPartFormField.from_file", "modulename": "python3-10.pyscalpel.http.body", "qualname": "MultiPartFormField.from_file", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">file</span><span class=\"p\">:</span> <span class=\"n\">_io</span><span class=\"o\">.</span><span class=\"n\">TextIOWrapper</span> <span class=\"o\">|</span> <span class=\"n\">_io</span><span class=\"o\">.</span><span class=\"n\">BufferedReader</span> <span class=\"o\">|</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">IOBase</span>,</span><span class=\"param\">\t<span class=\"n\">filename</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">content_type</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">encoding</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.http.body.MultiPartFormField.text", "modulename": "python3-10.pyscalpel.http.body", "qualname": "MultiPartFormField.text", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "python3-10.pyscalpel.http.body.MultiPartFormField.content_type", "modulename": "python3-10.pyscalpel.http.body", "qualname": "MultiPartFormField.content_type", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str | None"}, {"fullname": "python3-10.pyscalpel.http.body.MultiPartFormField.get_disposition_param", "modulename": "python3-10.pyscalpel.http.body", "qualname": "MultiPartFormField.get_disposition_param", "kind": "function", "doc": "<p>Get a param from the Content-Disposition header</p>\n\n<p>Args:\n    key (str): the param name</p>\n\n<p>Raises:\n    StopIteration: Raised when the param was not found.</p>\n\n<p>Returns:\n    tuple[str, str | None] | None: Returns the param as (key, value)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.http.body.MultiPartFormField.set_disposition_param", "modulename": "python3-10.pyscalpel.http.body", "qualname": "MultiPartFormField.set_disposition_param", "kind": "function", "doc": "<p>Set a Content-Type header parameter</p>\n\n<p>Args:\n    key (str): The parameter name\n    value (str): The parameter value</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.http.body.MultiPartFormField.name", "modulename": "python3-10.pyscalpel.http.body", "qualname": "MultiPartFormField.name", "kind": "variable", "doc": "<p>Get the Content-Disposition header name parameter</p>\n\n<p>Returns:\n    str: The Content-Disposition header name parameter value</p>\n", "annotation": ": str"}, {"fullname": "python3-10.pyscalpel.http.body.MultiPartFormField.filename", "modulename": "python3-10.pyscalpel.http.body", "qualname": "MultiPartFormField.filename", "kind": "variable", "doc": "<p>Get the Content-Disposition header filename parameter</p>\n\n<p>Returns:\n    str | None: The Content-Disposition header filename parameter value</p>\n", "annotation": ": str | None"}, {"fullname": "python3-10.pyscalpel.http.body.URLEncodedForm", "modulename": "python3-10.pyscalpel.http.body", "qualname": "URLEncodedForm", "kind": "class", "doc": "<p>A concrete MultiDict, storing its own data.</p>\n", "bases": "_internal_mitmproxy.coretypes.multidict.MultiDict[bytes, bytes]"}, {"fullname": "python3-10.pyscalpel.http.body.FormSerializer", "modulename": "python3-10.pyscalpel.http.body", "qualname": "FormSerializer", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "abc.ABC"}, {"fullname": "python3-10.pyscalpel.http.body.FormSerializer.serialize", "modulename": "python3-10.pyscalpel.http.body", "qualname": "FormSerializer.serialize", "kind": "function", "doc": "<p>Serialize a parsed form to raw bytes</p>\n\n<p>Args:\n    deserialized_body (Form): The parsed form\n    req (ObjectWithHeaders): The originating request (used for multipart to get an up to date boundary from content-type)</p>\n\n<p>Returns:\n    bytes: Form's raw bytes representation</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">deserialized_body</span><span class=\"p\">:</span> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">body</span><span class=\"o\">.</span><span class=\"n\">abstract</span><span class=\"o\">.</span><span class=\"n\">Form</span>,</span><span class=\"param\">\t<span class=\"n\">req</span><span class=\"p\">:</span> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">body</span><span class=\"o\">.</span><span class=\"n\">abstract</span><span class=\"o\">.</span><span class=\"n\">ObjectWithHeadersField</span> <span class=\"o\">|</span> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">body</span><span class=\"o\">.</span><span class=\"n\">abstract</span><span class=\"o\">.</span><span class=\"n\">ObjectWithHeadersProperty</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bytes</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.http.body.FormSerializer.deserialize", "modulename": "python3-10.pyscalpel.http.body", "qualname": "FormSerializer.deserialize", "kind": "function", "doc": "<p>Parses the form from its raw bytes representation</p>\n\n<p>Args:\n    body (bytes): The form as bytes\n    req (ObjectWithHeaders): The originating request  (used for multipart to get an up to date boundary from content-type)</p>\n\n<p>Returns:\n    Form | None: The parsed form</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">body</span><span class=\"p\">:</span> <span class=\"nb\">bytes</span>,</span><span class=\"param\">\t<span class=\"n\">req</span><span class=\"p\">:</span> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">body</span><span class=\"o\">.</span><span class=\"n\">abstract</span><span class=\"o\">.</span><span class=\"n\">ObjectWithHeadersField</span> <span class=\"o\">|</span> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">body</span><span class=\"o\">.</span><span class=\"n\">abstract</span><span class=\"o\">.</span><span class=\"n\">ObjectWithHeadersProperty</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">body</span><span class=\"o\">.</span><span class=\"n\">abstract</span><span class=\"o\">.</span><span class=\"n\">Form</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.http.body.FormSerializer.get_empty_form", "modulename": "python3-10.pyscalpel.http.body", "qualname": "FormSerializer.get_empty_form", "kind": "function", "doc": "<p>Get an empty parsed form object</p>\n\n<p>Args:\n    req (ObjectWithHeaders): The originating request (used to get a boundary for multipart forms)</p>\n\n<p>Returns:\n    Form: The empty form</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">req</span><span class=\"p\">:</span> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">body</span><span class=\"o\">.</span><span class=\"n\">abstract</span><span class=\"o\">.</span><span class=\"n\">ObjectWithHeadersField</span> <span class=\"o\">|</span> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">body</span><span class=\"o\">.</span><span class=\"n\">abstract</span><span class=\"o\">.</span><span class=\"n\">ObjectWithHeadersProperty</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">body</span><span class=\"o\">.</span><span class=\"n\">abstract</span><span class=\"o\">.</span><span class=\"n\">Form</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.http.body.FormSerializer.deserialized_type", "modulename": "python3-10.pyscalpel.http.body", "qualname": "FormSerializer.deserialized_type", "kind": "function", "doc": "<p>Gets the form concrete type</p>\n\n<p>Returns:\n    type[Form]: The form concrete type</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">type</span><span class=\"p\">[</span><span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">body</span><span class=\"o\">.</span><span class=\"n\">abstract</span><span class=\"o\">.</span><span class=\"n\">Form</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.http.body.FormSerializer.import_form", "modulename": "python3-10.pyscalpel.http.body", "qualname": "FormSerializer.import_form", "kind": "function", "doc": "<p>Imports a form exported by a serializer\n    Used to convert a form from a Content-Type to another\n    Information may be lost in the process</p>\n\n<p>Args:\n    exported (ExportedForm): The exported form\n    req: (ObjectWithHeaders): Used to get multipart boundary</p>\n\n<p>Returns:\n    Form: The form converted to this serializer's format</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">exported</span><span class=\"p\">:</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">bytes</span><span class=\"p\">,</span> <span class=\"nb\">bytes</span> <span class=\"o\">|</span> <span class=\"kc\">None</span><span class=\"p\">],</span> <span class=\"o\">...</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">req</span><span class=\"p\">:</span> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">body</span><span class=\"o\">.</span><span class=\"n\">abstract</span><span class=\"o\">.</span><span class=\"n\">ObjectWithHeadersField</span> <span class=\"o\">|</span> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">body</span><span class=\"o\">.</span><span class=\"n\">abstract</span><span class=\"o\">.</span><span class=\"n\">ObjectWithHeadersProperty</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">body</span><span class=\"o\">.</span><span class=\"n\">abstract</span><span class=\"o\">.</span><span class=\"n\">Form</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.http.body.FormSerializer.export_form", "modulename": "python3-10.pyscalpel.http.body", "qualname": "FormSerializer.export_form", "kind": "function", "doc": "<p>Formats a form so it can be imported by another serializer\n    Information may be lost in the process</p>\n\n<p>Args:\n    form (Form): The form to export</p>\n\n<p>Returns:\n    ExportedForm: The exported form</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">source</span><span class=\"p\">:</span> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">body</span><span class=\"o\">.</span><span class=\"n\">abstract</span><span class=\"o\">.</span><span class=\"n\">Form</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">bytes</span><span class=\"p\">,</span> <span class=\"nb\">bytes</span> <span class=\"o\">|</span> <span class=\"kc\">None</span><span class=\"p\">],</span> <span class=\"o\">...</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.http.body.json_unescape", "modulename": "python3-10.pyscalpel.http.body", "qualname": "json_unescape", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">escaped</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.http.body.json_unescape_bytes", "modulename": "python3-10.pyscalpel.http.body", "qualname": "json_unescape_bytes", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">escaped</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bytes</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.http.body.json_escape_bytes", "modulename": "python3-10.pyscalpel.http.body", "qualname": "json_escape_bytes", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"nb\">bytes</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java", "modulename": "python3-10.pyscalpel.java", "kind": "module", "doc": "<p>This module declares type definitions used for Java objects.</p>\n\n<p>If you are a normal user, you should probably never have to manipulate these objects yourself.</p>\n"}, {"fullname": "python3-10.pyscalpel.java.import_java", "modulename": "python3-10.pyscalpel.java", "qualname": "import_java", "kind": "function", "doc": "<p>Import a Java class using Python's import mechanism.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>module</strong>:  The module to import from. (e.g. \"java.lang\")</li>\n<li><strong>name</strong>:  The name of the class to import. (e.g. \"String\")</li>\n<li><strong>expected_type</strong>:  The expected type of the class. (e.g. JavaObject)</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The imported class.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">module</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\texpected_type: Type[~ExpectedObject] = &lt;class &#x27;pyscalpel.java.object.JavaObject&#x27;&gt;</span><span class=\"return-annotation\">) -> <span class=\"o\">~</span><span class=\"n\">ExpectedObject</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.JavaObject", "modulename": "python3-10.pyscalpel.java", "qualname": "JavaObject", "kind": "class", "doc": "<p>generated source for class Object</p>\n", "bases": "typing.Protocol"}, {"fullname": "python3-10.pyscalpel.java.JavaObject.getClass", "modulename": "python3-10.pyscalpel.java", "qualname": "JavaObject.getClass", "kind": "function", "doc": "<p>generated source for method getClass</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">python3</span><span class=\"o\">-</span><span class=\"mf\">10.</span><span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">object</span><span class=\"o\">.</span><span class=\"n\">JavaClass</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.JavaObject.hashCode", "modulename": "python3-10.pyscalpel.java", "qualname": "JavaObject.hashCode", "kind": "function", "doc": "<p>generated source for method hashCode</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.JavaObject.equals", "modulename": "python3-10.pyscalpel.java", "qualname": "JavaObject.equals", "kind": "function", "doc": "<p>generated source for method equals</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">obj</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.JavaObject.clone", "modulename": "python3-10.pyscalpel.java", "qualname": "JavaObject.clone", "kind": "function", "doc": "<p>generated source for method clone</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">python3</span><span class=\"o\">-</span><span class=\"mf\">10.</span><span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">object</span><span class=\"o\">.</span><span class=\"n\">JavaObject</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.JavaObject.notify", "modulename": "python3-10.pyscalpel.java", "qualname": "JavaObject.notify", "kind": "function", "doc": "<p>generated source for method notify</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.JavaObject.notifyAll", "modulename": "python3-10.pyscalpel.java", "qualname": "JavaObject.notifyAll", "kind": "function", "doc": "<p>generated source for method notifyAll</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.JavaObject.wait", "modulename": "python3-10.pyscalpel.java", "qualname": "JavaObject.wait", "kind": "function", "doc": "<p>Helper for @overload to raise when called.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwds</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.JavaObject.finalize", "modulename": "python3-10.pyscalpel.java", "qualname": "JavaObject.finalize", "kind": "function", "doc": "<p>generated source for method finalize</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.JavaBytes", "modulename": "python3-10.pyscalpel.java", "qualname": "JavaBytes", "kind": "class", "doc": "<p>Built-in mutable sequence.</p>\n\n<p>If no argument is given, the constructor creates a new empty list.\nThe argument must be an iterable if specified.</p>\n", "bases": "list[int]"}, {"fullname": "python3-10.pyscalpel.java.JavaClass", "modulename": "python3-10.pyscalpel.java", "qualname": "JavaClass", "kind": "class", "doc": "<p>generated source for class Object</p>\n", "bases": "python3-10.pyscalpel.java.object.JavaObject"}, {"fullname": "python3-10.pyscalpel.java.burp", "modulename": "python3-10.pyscalpel.java.burp", "kind": "module", "doc": "<p>This module exposes Java objects from Burp's extensions API</p>\n\n<p>If you are a normal user, you should probably never have to manipulate these objects yourself.</p>\n"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttp", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttp", "kind": "class", "doc": "<p>generated source for interface Http</p>\n", "bases": "pyscalpel.java.object.JavaObject, typing.Protocol"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttp.sendRequest", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttp.sendRequest", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">request</span><span class=\"p\">:</span> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">http_request</span><span class=\"o\">.</span><span class=\"n\">IHttpRequest</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">http_request_response</span><span class=\"o\">.</span><span class=\"n\">IHttpRequestResponse</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpRequest", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpRequest", "kind": "class", "doc": "<p>generated source for interface HttpRequest</p>\n", "bases": "pyscalpel.java.burp.http_message.IHttpMessage, typing.Protocol"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpRequest.httpService", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpRequest.httpService", "kind": "function", "doc": "<p>generated source for method httpService</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">http_service</span><span class=\"o\">.</span><span class=\"n\">IHttpService</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpRequest.url", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpRequest.url", "kind": "function", "doc": "<p>generated source for method url</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpRequest.method", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpRequest.method", "kind": "function", "doc": "<p>generated source for method method</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpRequest.path", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpRequest.path", "kind": "function", "doc": "<p>generated source for method path</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpRequest.httpVersion", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpRequest.httpVersion", "kind": "function", "doc": "<p>generated source for method httpVersion</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpRequest.headers", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpRequest.headers", "kind": "function", "doc": "<p>generated source for method headers</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">http_header</span><span class=\"o\">.</span><span class=\"n\">IHttpHeader</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpRequest.contentType", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpRequest.contentType", "kind": "function", "doc": "<p>generated source for method contentType</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">object</span><span class=\"o\">.</span><span class=\"n\">JavaObject</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpRequest.parameters", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpRequest.parameters", "kind": "function", "doc": "<p>generated source for method parameters</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">http_parameter</span><span class=\"o\">.</span><span class=\"n\">IHttpParameter</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpRequest.body", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpRequest.body", "kind": "function", "doc": "<p>generated source for method body</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">byte_array</span><span class=\"o\">.</span><span class=\"n\">IByteArray</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpRequest.bodyToString", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpRequest.bodyToString", "kind": "function", "doc": "<p>generated source for method bodyToString</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpRequest.bodyOffset", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpRequest.bodyOffset", "kind": "function", "doc": "<p>generated source for method bodyOffset</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpRequest.markers", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpRequest.markers", "kind": "function", "doc": "<p>generated source for method markers</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpRequest.toByteArray", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpRequest.toByteArray", "kind": "function", "doc": "<p>generated source for method toByteArray</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">byte_array</span><span class=\"o\">.</span><span class=\"n\">IByteArray</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpRequest.copyToTempFile", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpRequest.copyToTempFile", "kind": "function", "doc": "<p>generated source for method copyToTempFile</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">python3</span><span class=\"o\">-</span><span class=\"mf\">10.</span><span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">http_request</span><span class=\"o\">.</span><span class=\"n\">IHttpRequest</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpRequest.withService", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpRequest.withService", "kind": "function", "doc": "<p>generated source for method withService</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">service</span><span class=\"p\">:</span> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">http_service</span><span class=\"o\">.</span><span class=\"n\">IHttpService</span></span><span class=\"return-annotation\">) -> <span class=\"n\">python3</span><span class=\"o\">-</span><span class=\"mf\">10.</span><span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">http_request</span><span class=\"o\">.</span><span class=\"n\">IHttpRequest</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpRequest.withPath", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpRequest.withPath", "kind": "function", "doc": "<p>generated source for method withPath</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">python3</span><span class=\"o\">-</span><span class=\"mf\">10.</span><span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">http_request</span><span class=\"o\">.</span><span class=\"n\">IHttpRequest</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpRequest.withMethod", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpRequest.withMethod", "kind": "function", "doc": "<p>generated source for method withMethod</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">method</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">python3</span><span class=\"o\">-</span><span class=\"mf\">10.</span><span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">http_request</span><span class=\"o\">.</span><span class=\"n\">IHttpRequest</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpRequest.withAddedParameters", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpRequest.withAddedParameters", "kind": "function", "doc": "<p>generated source for method withAddedParameters</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">parameters</span><span class=\"p\">:</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">http_parameter</span><span class=\"o\">.</span><span class=\"n\">IHttpParameter</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">python3</span><span class=\"o\">-</span><span class=\"mf\">10.</span><span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">http_request</span><span class=\"o\">.</span><span class=\"n\">IHttpRequest</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpRequest.withAddedParameters_0", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpRequest.withAddedParameters_0", "kind": "function", "doc": "<p>generated source for method withAddedParameters_0</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">parameters</span><span class=\"p\">:</span> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">http_parameter</span><span class=\"o\">.</span><span class=\"n\">IHttpParameter</span></span><span class=\"return-annotation\">) -> <span class=\"n\">python3</span><span class=\"o\">-</span><span class=\"mf\">10.</span><span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">http_request</span><span class=\"o\">.</span><span class=\"n\">IHttpRequest</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpRequest.withRemovedParameters", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpRequest.withRemovedParameters", "kind": "function", "doc": "<p>generated source for method withRemovedParameters</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">parameters</span><span class=\"p\">:</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">http_parameter</span><span class=\"o\">.</span><span class=\"n\">IHttpParameter</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">python3</span><span class=\"o\">-</span><span class=\"mf\">10.</span><span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">http_request</span><span class=\"o\">.</span><span class=\"n\">IHttpRequest</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpRequest.withRemovedParameters_0", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpRequest.withRemovedParameters_0", "kind": "function", "doc": "<p>generated source for method withRemovedParameters_0</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">parameters</span><span class=\"p\">:</span> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">http_parameter</span><span class=\"o\">.</span><span class=\"n\">IHttpParameter</span></span><span class=\"return-annotation\">) -> <span class=\"n\">python3</span><span class=\"o\">-</span><span class=\"mf\">10.</span><span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">http_request</span><span class=\"o\">.</span><span class=\"n\">IHttpRequest</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpRequest.withUpdatedParameters", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpRequest.withUpdatedParameters", "kind": "function", "doc": "<p>generated source for method withUpdatedParameters</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">parameters</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">http_parameter</span><span class=\"o\">.</span><span class=\"n\">IHttpParameter</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">python3</span><span class=\"o\">-</span><span class=\"mf\">10.</span><span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">http_request</span><span class=\"o\">.</span><span class=\"n\">IHttpRequest</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpRequest.withUpdatedParameters_0", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpRequest.withUpdatedParameters_0", "kind": "function", "doc": "<p>generated source for method withUpdatedParameters_0</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">parameters</span><span class=\"p\">:</span> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">http_parameter</span><span class=\"o\">.</span><span class=\"n\">IHttpParameter</span></span><span class=\"return-annotation\">) -> <span class=\"n\">python3</span><span class=\"o\">-</span><span class=\"mf\">10.</span><span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">http_request</span><span class=\"o\">.</span><span class=\"n\">IHttpRequest</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpRequest.withTransformationApplied", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpRequest.withTransformationApplied", "kind": "function", "doc": "<p>generated source for method withTransformationApplied</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">transformation</span></span><span class=\"return-annotation\">) -> <span class=\"n\">python3</span><span class=\"o\">-</span><span class=\"mf\">10.</span><span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">http_request</span><span class=\"o\">.</span><span class=\"n\">IHttpRequest</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpRequest.withBody", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpRequest.withBody", "kind": "function", "doc": "<p>generated source for method withBody</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">body</span></span><span class=\"return-annotation\">) -> <span class=\"n\">python3</span><span class=\"o\">-</span><span class=\"mf\">10.</span><span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">http_request</span><span class=\"o\">.</span><span class=\"n\">IHttpRequest</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpRequest.withBody_0", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpRequest.withBody_0", "kind": "function", "doc": "<p>generated source for method withBody_0</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">body</span><span class=\"p\">:</span> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">byte_array</span><span class=\"o\">.</span><span class=\"n\">IByteArray</span></span><span class=\"return-annotation\">) -> <span class=\"n\">python3</span><span class=\"o\">-</span><span class=\"mf\">10.</span><span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">http_request</span><span class=\"o\">.</span><span class=\"n\">IHttpRequest</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpRequest.withAddedHeader", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpRequest.withAddedHeader", "kind": "function", "doc": "<p>generated source for method withAddedHeader</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">python3</span><span class=\"o\">-</span><span class=\"mf\">10.</span><span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">http_request</span><span class=\"o\">.</span><span class=\"n\">IHttpRequest</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpRequest.withAddedHeader_0", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpRequest.withAddedHeader_0", "kind": "function", "doc": "<p>generated source for method withAddedHeader_0</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">header</span><span class=\"p\">:</span> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">http_header</span><span class=\"o\">.</span><span class=\"n\">IHttpHeader</span></span><span class=\"return-annotation\">) -> <span class=\"n\">python3</span><span class=\"o\">-</span><span class=\"mf\">10.</span><span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">http_request</span><span class=\"o\">.</span><span class=\"n\">IHttpRequest</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpRequest.withUpdatedHeader", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpRequest.withUpdatedHeader", "kind": "function", "doc": "<p>generated source for method withUpdatedHeader</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">python3</span><span class=\"o\">-</span><span class=\"mf\">10.</span><span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">http_request</span><span class=\"o\">.</span><span class=\"n\">IHttpRequest</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpRequest.withUpdatedHeader_0", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpRequest.withUpdatedHeader_0", "kind": "function", "doc": "<p>generated source for method withUpdatedHeader_0</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">header</span><span class=\"p\">:</span> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">http_header</span><span class=\"o\">.</span><span class=\"n\">IHttpHeader</span></span><span class=\"return-annotation\">) -> <span class=\"n\">python3</span><span class=\"o\">-</span><span class=\"mf\">10.</span><span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">http_request</span><span class=\"o\">.</span><span class=\"n\">IHttpRequest</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpRequest.withRemovedHeader", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpRequest.withRemovedHeader", "kind": "function", "doc": "<p>generated source for method withRemovedHeader</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">python3</span><span class=\"o\">-</span><span class=\"mf\">10.</span><span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">http_request</span><span class=\"o\">.</span><span class=\"n\">IHttpRequest</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpRequest.withRemovedHeader_0", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpRequest.withRemovedHeader_0", "kind": "function", "doc": "<p>generated source for method withRemovedHeader_0</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">header</span><span class=\"p\">:</span> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">http_header</span><span class=\"o\">.</span><span class=\"n\">IHttpHeader</span></span><span class=\"return-annotation\">) -> <span class=\"n\">python3</span><span class=\"o\">-</span><span class=\"mf\">10.</span><span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">http_request</span><span class=\"o\">.</span><span class=\"n\">IHttpRequest</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpRequest.withMarkers", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpRequest.withMarkers", "kind": "function", "doc": "<p>generated source for method withMarkers</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">markers</span></span><span class=\"return-annotation\">) -> <span class=\"n\">python3</span><span class=\"o\">-</span><span class=\"mf\">10.</span><span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">http_request</span><span class=\"o\">.</span><span class=\"n\">IHttpRequest</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpRequest.withMarkers_0", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpRequest.withMarkers_0", "kind": "function", "doc": "<p>generated source for method withMarkers_0</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">markers</span></span><span class=\"return-annotation\">) -> <span class=\"n\">python3</span><span class=\"o\">-</span><span class=\"mf\">10.</span><span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">http_request</span><span class=\"o\">.</span><span class=\"n\">IHttpRequest</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpRequest.withDefaultHeaders", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpRequest.withDefaultHeaders", "kind": "function", "doc": "<p>generated source for method withDefaultHeaders</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">python3</span><span class=\"o\">-</span><span class=\"mf\">10.</span><span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">http_request</span><span class=\"o\">.</span><span class=\"n\">IHttpRequest</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpRequest.httpRequest", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpRequest.httpRequest", "kind": "function", "doc": "<p>Helper for @overload to raise when called.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwds</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpRequest.httpRequestFromUrl", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpRequest.httpRequestFromUrl", "kind": "function", "doc": "<p>generated source for method httpRequestFromUrl</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">python3</span><span class=\"o\">-</span><span class=\"mf\">10.</span><span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">http_request</span><span class=\"o\">.</span><span class=\"n\">IHttpRequest</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpRequest.http2Request", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpRequest.http2Request", "kind": "function", "doc": "<p>generated source for method http2Request</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">service</span><span class=\"p\">:</span> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">http_service</span><span class=\"o\">.</span><span class=\"n\">IHttpService</span>,</span><span class=\"param\">\t<span class=\"n\">headers</span><span class=\"p\">:</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">http_header</span><span class=\"o\">.</span><span class=\"n\">IHttpHeader</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">body</span><span class=\"p\">:</span> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">byte_array</span><span class=\"o\">.</span><span class=\"n\">IByteArray</span></span><span class=\"return-annotation\">) -> <span class=\"n\">python3</span><span class=\"o\">-</span><span class=\"mf\">10.</span><span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">http_request</span><span class=\"o\">.</span><span class=\"n\">IHttpRequest</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.HttpRequest", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "HttpRequest", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpResponse", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpResponse", "kind": "class", "doc": "<p>generated source for interface HttpResponse</p>\n", "bases": "pyscalpel.java.burp.http_message.IHttpMessage, typing.Protocol"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpResponse.statusCode", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpResponse.statusCode", "kind": "function", "doc": "<p>generated source for method statusCode</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpResponse.reasonPhrase", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpResponse.reasonPhrase", "kind": "function", "doc": "<p>generated source for method reasonPhrase</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpResponse.httpVersion", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpResponse.httpVersion", "kind": "function", "doc": "<p>generated source for method httpVersion</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpResponse.headers", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpResponse.headers", "kind": "function", "doc": "<p>generated source for method headers</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">http_header</span><span class=\"o\">.</span><span class=\"n\">IHttpHeader</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpResponse.body", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpResponse.body", "kind": "function", "doc": "<p>generated source for method body</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">byte_array</span><span class=\"o\">.</span><span class=\"n\">IByteArray</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpResponse.bodyToString", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpResponse.bodyToString", "kind": "function", "doc": "<p>generated source for method bodyToString</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpResponse.bodyOffset", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpResponse.bodyOffset", "kind": "function", "doc": "<p>generated source for method bodyOffset</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpResponse.markers", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpResponse.markers", "kind": "function", "doc": "<p>generated source for method markers</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">object</span><span class=\"o\">.</span><span class=\"n\">JavaObject</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpResponse.cookies", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpResponse.cookies", "kind": "function", "doc": "<p>generated source for method cookies</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">object</span><span class=\"o\">.</span><span class=\"n\">JavaObject</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpResponse.statedMimeType", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpResponse.statedMimeType", "kind": "function", "doc": "<p>generated source for method statedMimeType</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">object</span><span class=\"o\">.</span><span class=\"n\">JavaObject</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpResponse.inferredMimeType", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpResponse.inferredMimeType", "kind": "function", "doc": "<p>generated source for method inferredMimeType</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">object</span><span class=\"o\">.</span><span class=\"n\">JavaObject</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpResponse.keywordCounts", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpResponse.keywordCounts", "kind": "function", "doc": "<p>generated source for method keywordCounts</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">keywords</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpResponse.attributes", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpResponse.attributes", "kind": "function", "doc": "<p>generated source for method attributes</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">types</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">object</span><span class=\"o\">.</span><span class=\"n\">JavaObject</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpResponse.toByteArray", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpResponse.toByteArray", "kind": "function", "doc": "<p>generated source for method toByteArray</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">byte_array</span><span class=\"o\">.</span><span class=\"n\">IByteArray</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpResponse.copyToTempFile", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpResponse.copyToTempFile", "kind": "function", "doc": "<p>generated source for method copyToTempFile</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">python3</span><span class=\"o\">-</span><span class=\"mf\">10.</span><span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">http_response</span><span class=\"o\">.</span><span class=\"n\">IHttpResponse</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpResponse.withStatusCode", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpResponse.withStatusCode", "kind": "function", "doc": "<p>generated source for method withStatusCode</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">statusCode</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">python3</span><span class=\"o\">-</span><span class=\"mf\">10.</span><span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">http_response</span><span class=\"o\">.</span><span class=\"n\">IHttpResponse</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpResponse.withReasonPhrase", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpResponse.withReasonPhrase", "kind": "function", "doc": "<p>generated source for method withReasonPhrase</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">reasonPhrase</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">python3</span><span class=\"o\">-</span><span class=\"mf\">10.</span><span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">http_response</span><span class=\"o\">.</span><span class=\"n\">IHttpResponse</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpResponse.withHttpVersion", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpResponse.withHttpVersion", "kind": "function", "doc": "<p>generated source for method withHttpVersion</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">httpVersion</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">python3</span><span class=\"o\">-</span><span class=\"mf\">10.</span><span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">http_response</span><span class=\"o\">.</span><span class=\"n\">IHttpResponse</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpResponse.withBody", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpResponse.withBody", "kind": "function", "doc": "<p>generated source for method withBody</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">body</span><span class=\"p\">:</span> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">byte_array</span><span class=\"o\">.</span><span class=\"n\">IByteArray</span> <span class=\"o\">|</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">python3</span><span class=\"o\">-</span><span class=\"mf\">10.</span><span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">http_response</span><span class=\"o\">.</span><span class=\"n\">IHttpResponse</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpResponse.withAddedHeader", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpResponse.withAddedHeader", "kind": "function", "doc": "<p>generated source for method withAddedHeader_0</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">python3</span><span class=\"o\">-</span><span class=\"mf\">10.</span><span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">http_response</span><span class=\"o\">.</span><span class=\"n\">IHttpResponse</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpResponse.withUpdatedHeader", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpResponse.withUpdatedHeader", "kind": "function", "doc": "<p>generated source for method withUpdatedHeader_0</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">python3</span><span class=\"o\">-</span><span class=\"mf\">10.</span><span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">http_response</span><span class=\"o\">.</span><span class=\"n\">IHttpResponse</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpResponse.withRemovedHeader", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpResponse.withRemovedHeader", "kind": "function", "doc": "<p>generated source for method withRemovedHeader_0</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">python3</span><span class=\"o\">-</span><span class=\"mf\">10.</span><span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">http_response</span><span class=\"o\">.</span><span class=\"n\">IHttpResponse</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpResponse.withMarkers", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpResponse.withMarkers", "kind": "function", "doc": "<p>Helper for @overload to raise when called.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwds</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpResponse.httpResponse", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpResponse.httpResponse", "kind": "function", "doc": "<p>generated source for method httpResponse</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">response</span><span class=\"p\">:</span> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">byte_array</span><span class=\"o\">.</span><span class=\"n\">IByteArray</span> <span class=\"o\">|</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">python3</span><span class=\"o\">-</span><span class=\"mf\">10.</span><span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">http_response</span><span class=\"o\">.</span><span class=\"n\">IHttpResponse</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.HttpResponse", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "HttpResponse", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpRequestResponse", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpRequestResponse", "kind": "class", "doc": "<p>generated source for interface HttpRequestResponse</p>\n", "bases": "pyscalpel.java.object.JavaObject, typing.Protocol"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpRequestResponse.request", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpRequestResponse.request", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">http_request</span><span class=\"o\">.</span><span class=\"n\">IHttpRequest</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpRequestResponse.response", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpRequestResponse.response", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">http_response</span><span class=\"o\">.</span><span class=\"n\">IHttpResponse</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpHeader", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpHeader", "kind": "class", "doc": "<p>generated source for interface HttpHeader</p>\n", "bases": "pyscalpel.java.object.JavaObject, typing.Protocol"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpHeader.name", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpHeader.name", "kind": "function", "doc": "<p>generated source for method name</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpHeader.value", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpHeader.value", "kind": "function", "doc": "<p>generated source for method value</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpHeader.httpHeader", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpHeader.httpHeader", "kind": "function", "doc": "<p>Helper for @overload to raise when called.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwds</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.HttpHeader", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "HttpHeader", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpMessage", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpMessage", "kind": "class", "doc": "<p>generated source for interface HttpMessage</p>\n", "bases": "pyscalpel.java.object.JavaObject, typing.Protocol"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpMessage.headers", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpMessage.headers", "kind": "function", "doc": "<p>generated source for method headers</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">http_header</span><span class=\"o\">.</span><span class=\"n\">IHttpHeader</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpMessage.bodyOffset", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpMessage.bodyOffset", "kind": "function", "doc": "<p>generated source for method bodyOffset</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpMessage.body", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpMessage.body", "kind": "function", "doc": "<p>generated source for method body</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">byte_array</span><span class=\"o\">.</span><span class=\"n\">IByteArray</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpMessage.bodyToString", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpMessage.bodyToString", "kind": "function", "doc": "<p>generated source for method bodyToString</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpMessage.markers", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpMessage.markers", "kind": "function", "doc": "<p>generated source for method markers</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">object</span><span class=\"o\">.</span><span class=\"n\">JavaObject</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpMessage.toByteArray", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpMessage.toByteArray", "kind": "function", "doc": "<p>generated source for method toByteArray</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">byte_array</span><span class=\"o\">.</span><span class=\"n\">IByteArray</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpParameter", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpParameter", "kind": "class", "doc": "<p>generated source for interface HttpParameter</p>\n", "bases": "pyscalpel.java.object.JavaObject"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpParameter.type_", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpParameter.type_", "kind": "function", "doc": "<p>generated source for method type_</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">object</span><span class=\"o\">.</span><span class=\"n\">JavaObject</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpParameter.name", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpParameter.name", "kind": "function", "doc": "<p>generated source for method name</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpParameter.value", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpParameter.value", "kind": "function", "doc": "<p>generated source for method value</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpParameter.urlParameter", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpParameter.urlParameter", "kind": "function", "doc": "<p>generated source for method urlParameter</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">python3</span><span class=\"o\">-</span><span class=\"mf\">10.</span><span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">http_parameter</span><span class=\"o\">.</span><span class=\"n\">IHttpParameter</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpParameter.bodyParameter", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpParameter.bodyParameter", "kind": "function", "doc": "<p>generated source for method bodyParameter</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">python3</span><span class=\"o\">-</span><span class=\"mf\">10.</span><span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">http_parameter</span><span class=\"o\">.</span><span class=\"n\">IHttpParameter</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpParameter.cookieParameter", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpParameter.cookieParameter", "kind": "function", "doc": "<p>generated source for method cookieParameter</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">python3</span><span class=\"o\">-</span><span class=\"mf\">10.</span><span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">http_parameter</span><span class=\"o\">.</span><span class=\"n\">IHttpParameter</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpParameter.parameter", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpParameter.parameter", "kind": "function", "doc": "<p>generated source for method parameter</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">type_</span><span class=\"p\">:</span> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">object</span><span class=\"o\">.</span><span class=\"n\">JavaObject</span></span><span class=\"return-annotation\">) -> <span class=\"n\">python3</span><span class=\"o\">-</span><span class=\"mf\">10.</span><span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">http_parameter</span><span class=\"o\">.</span><span class=\"n\">IHttpParameter</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.HttpParameter", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "HttpParameter", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpService", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpService", "kind": "class", "doc": "<p>generated source for class Object</p>\n", "bases": "pyscalpel.java.object.JavaObject"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpService.host", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpService.host", "kind": "function", "doc": "<p>The hostname or IP address for the service.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpService.httpService", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpService.httpService", "kind": "function", "doc": "<p>Create a new instance of {@code HttpService} from a host, a port and a protocol.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">python3</span><span class=\"o\">-</span><span class=\"mf\">10.</span><span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">http_service</span><span class=\"o\">.</span><span class=\"n\">IHttpService</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpService.port", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpService.port", "kind": "function", "doc": "<p>The port number for the service.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IHttpService.secure", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IHttpService.secure", "kind": "function", "doc": "<p>True if a secure protocol is used for the connection, false otherwise.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.HttpService", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "HttpService", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "python3-10.pyscalpel.java.burp.IByteArray", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IByteArray", "kind": "class", "doc": "<p>generated source for class Object</p>\n", "bases": "pyscalpel.java.object.JavaObject, typing.Protocol"}, {"fullname": "python3-10.pyscalpel.java.burp.IByteArray.getByte", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IByteArray.getByte", "kind": "function", "doc": "<p>generated source for method getByte</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">index</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IByteArray.setByte", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IByteArray.setByte", "kind": "function", "doc": "<p>Helper for @overload to raise when called.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwds</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IByteArray.setBytes", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IByteArray.setBytes", "kind": "function", "doc": "<p>Helper for @overload to raise when called.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwds</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IByteArray.length", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IByteArray.length", "kind": "function", "doc": "<p>generated source for method length</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IByteArray.getBytes", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IByteArray.getBytes", "kind": "function", "doc": "<p>generated source for method getBytes</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">bytes</span><span class=\"o\">.</span><span class=\"n\">JavaBytes</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IByteArray.subArray", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IByteArray.subArray", "kind": "function", "doc": "<p>Helper for @overload to raise when called.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwds</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IByteArray.copy", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IByteArray.copy", "kind": "function", "doc": "<p>generated source for method copy</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">python3</span><span class=\"o\">-</span><span class=\"mf\">10.</span><span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">byte_array</span><span class=\"o\">.</span><span class=\"n\">IByteArray</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IByteArray.copyToTempFile", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IByteArray.copyToTempFile", "kind": "function", "doc": "<p>generated source for method copyToTempFile</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">python3</span><span class=\"o\">-</span><span class=\"mf\">10.</span><span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">byte_array</span><span class=\"o\">.</span><span class=\"n\">IByteArray</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IByteArray.indexOf", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IByteArray.indexOf", "kind": "function", "doc": "<p>Helper for @overload to raise when called.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwds</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IByteArray.countMatches", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IByteArray.countMatches", "kind": "function", "doc": "<p>Helper for @overload to raise when called.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwds</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IByteArray.withAppended", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IByteArray.withAppended", "kind": "function", "doc": "<p>generated source for method withAppended</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">python3</span><span class=\"o\">-</span><span class=\"mf\">10.</span><span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">byte_array</span><span class=\"o\">.</span><span class=\"n\">IByteArray</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IByteArray.byteArrayOfLength", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IByteArray.byteArrayOfLength", "kind": "function", "doc": "<p>generated source for method byteArrayOfLength</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">length</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">python3</span><span class=\"o\">-</span><span class=\"mf\">10.</span><span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">byte_array</span><span class=\"o\">.</span><span class=\"n\">IByteArray</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.IByteArray.byteArray", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "IByteArray.byteArray", "kind": "function", "doc": "<p>generated source for method byteArray</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"nb\">bytes</span> <span class=\"o\">|</span> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">bytes</span><span class=\"o\">.</span><span class=\"n\">JavaBytes</span> <span class=\"o\">|</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">python3</span><span class=\"o\">-</span><span class=\"mf\">10.</span><span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">byte_array</span><span class=\"o\">.</span><span class=\"n\">IByteArray</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.ByteArray", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "ByteArray", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "python3-10.pyscalpel.java.burp.Logging", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "Logging", "kind": "class", "doc": "<p>generated source for interface Logging</p>\n", "bases": "pyscalpel.java.object.JavaObject"}, {"fullname": "python3-10.pyscalpel.java.burp.Logging.output", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "Logging.output", "kind": "function", "doc": "<p>generated source for method output</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">object</span><span class=\"o\">.</span><span class=\"n\">JavaObject</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.Logging.error", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "Logging.error", "kind": "function", "doc": "<p>generated source for method error</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">message</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.Logging.logToOutput", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "Logging.logToOutput", "kind": "function", "doc": "<p>generated source for method logToOutput</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">message</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.Logging.raiseDebugEvent", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "Logging.raiseDebugEvent", "kind": "function", "doc": "<p>generated source for method raiseDebugEvent</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">message</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.Logging.raiseInfoEvent", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "Logging.raiseInfoEvent", "kind": "function", "doc": "<p>generated source for method raiseInfoEvent</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">message</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.Logging.raiseErrorEvent", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "Logging.raiseErrorEvent", "kind": "function", "doc": "<p>generated source for method raiseErrorEvent</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">message</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.burp.Logging.raiseCriticalEvent", "modulename": "python3-10.pyscalpel.java.burp", "qualname": "Logging.raiseCriticalEvent", "kind": "function", "doc": "<p>generated source for method raiseCriticalEvent</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">message</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.import_java", "modulename": "python3-10.pyscalpel.java.import_java", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "python3-10.pyscalpel.java.import_java.import_java", "modulename": "python3-10.pyscalpel.java.import_java", "qualname": "import_java", "kind": "function", "doc": "<p>Import a Java class using Python's import mechanism.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>module</strong>:  The module to import from. (e.g. \"java.lang\")</li>\n<li><strong>name</strong>:  The name of the class to import. (e.g. \"String\")</li>\n<li><strong>expected_type</strong>:  The expected type of the class. (e.g. JavaObject)</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The imported class.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">module</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\texpected_type: Type[~ExpectedObject] = &lt;class &#x27;pyscalpel.java.object.JavaObject&#x27;&gt;</span><span class=\"return-annotation\">) -> <span class=\"o\">~</span><span class=\"n\">ExpectedObject</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.scalpel_types", "modulename": "python3-10.pyscalpel.java.scalpel_types", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "python3-10.pyscalpel.java.scalpel_types.Context", "modulename": "python3-10.pyscalpel.java.scalpel_types", "qualname": "Context", "kind": "class", "doc": "<p>Scalpel Python execution context</p>\n", "bases": "typing.TypedDict"}, {"fullname": "python3-10.pyscalpel.java.scalpel_types.Context.API", "modulename": "python3-10.pyscalpel.java.scalpel_types", "qualname": "Context.API", "kind": "variable", "doc": "<p>The Burp [Montoya API]\n(<a href=\"https://portswigger.github.io/burp-extensions-montoya-api/javadoc/burp/api/montoya/MontoyaApi.html\">https://portswigger.github.io/burp-extensions-montoya-api/javadoc/burp/api/montoya/MontoyaApi.html</a>)\nroot object.</p>\n\n<p>Allows you to interact with Burp by directly manipulating the Java object.</p>\n", "annotation": ": Any"}, {"fullname": "python3-10.pyscalpel.java.scalpel_types.Context.directory", "modulename": "python3-10.pyscalpel.java.scalpel_types", "qualname": "Context.directory", "kind": "variable", "doc": "<p>The framework directory</p>\n", "annotation": ": str"}, {"fullname": "python3-10.pyscalpel.java.scalpel_types.Context.user_script", "modulename": "python3-10.pyscalpel.java.scalpel_types", "qualname": "Context.user_script", "kind": "variable", "doc": "<p>The loaded script path</p>\n", "annotation": ": str"}, {"fullname": "python3-10.pyscalpel.java.scalpel_types.Context.framework", "modulename": "python3-10.pyscalpel.java.scalpel_types", "qualname": "Context.framework", "kind": "variable", "doc": "<p>The framework (loader script) path</p>\n", "annotation": ": str"}, {"fullname": "python3-10.pyscalpel.java.scalpel_types.Context.venv", "modulename": "python3-10.pyscalpel.java.scalpel_types", "qualname": "Context.venv", "kind": "variable", "doc": "<p>The venv the script was loaded in</p>\n", "annotation": ": str"}, {"fullname": "python3-10.pyscalpel.java.scalpel_types.IPythonUtils", "modulename": "python3-10.pyscalpel.java.scalpel_types", "qualname": "IPythonUtils", "kind": "class", "doc": "<p>generated source for class Object</p>\n", "bases": "pyscalpel.java.object.JavaObject"}, {"fullname": "python3-10.pyscalpel.java.scalpel_types.IPythonUtils.toPythonBytes", "modulename": "python3-10.pyscalpel.java.scalpel_types", "qualname": "IPythonUtils.toPythonBytes", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">java_bytes</span><span class=\"p\">:</span> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">bytes</span><span class=\"o\">.</span><span class=\"n\">JavaBytes</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.scalpel_types.IPythonUtils.toJavaBytes", "modulename": "python3-10.pyscalpel.java.scalpel_types", "qualname": "IPythonUtils.toJavaBytes", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">python_bytes</span><span class=\"p\">:</span> <span class=\"nb\">bytes</span> <span class=\"o\">|</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"nb\">bytearray</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">bytes</span><span class=\"o\">.</span><span class=\"n\">JavaBytes</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.scalpel_types.IPythonUtils.toByteArray", "modulename": "python3-10.pyscalpel.java.scalpel_types", "qualname": "IPythonUtils.toByteArray", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">python_bytes</span><span class=\"p\">:</span> <span class=\"nb\">bytes</span> <span class=\"o\">|</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"nb\">bytearray</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">burp</span><span class=\"o\">.</span><span class=\"n\">byte_array</span><span class=\"o\">.</span><span class=\"n\">IByteArray</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.scalpel_types.IPythonUtils.getClassName", "modulename": "python3-10.pyscalpel.java.scalpel_types", "qualname": "IPythonUtils.getClassName", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">msg</span><span class=\"p\">:</span> <span class=\"n\">pyscalpel</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">object</span><span class=\"o\">.</span><span class=\"n\">JavaObject</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.scalpel_types.IPythonUtils.updateHeader", "modulename": "python3-10.pyscalpel.java.scalpel_types", "qualname": "IPythonUtils.updateHeader", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">msg</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">RequestOrResponse</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"o\">~</span><span class=\"n\">RequestOrResponse</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.java.scalpel_types.PythonUtils", "modulename": "python3-10.pyscalpel.java.scalpel_types", "qualname": "PythonUtils", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "python3-10.pyscalpel.logger", "modulename": "python3-10.pyscalpel.logger", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "python3-10.pyscalpel.logger.Logger", "modulename": "python3-10.pyscalpel.logger", "qualname": "Logger", "kind": "class", "doc": "<p>Provides methods for logging messages to the Burp Suite output and standard streams.</p>\n"}, {"fullname": "python3-10.pyscalpel.logger.Logger.all", "modulename": "python3-10.pyscalpel.logger", "qualname": "Logger.all", "kind": "function", "doc": "<p>Prints the message to the standard output</p>\n\n<p>Args:\n    msg (str): The message to print</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">msg</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.logger.Logger.trace", "modulename": "python3-10.pyscalpel.logger", "qualname": "Logger.trace", "kind": "function", "doc": "<p>Prints the message to the standard output</p>\n\n<p>Args:\n    msg (str): The message to print</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">msg</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.logger.Logger.debug", "modulename": "python3-10.pyscalpel.logger", "qualname": "Logger.debug", "kind": "function", "doc": "<p>Prints the message to the standard output</p>\n\n<p>Args:\n    msg (str): The message to print</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">msg</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.logger.Logger.info", "modulename": "python3-10.pyscalpel.logger", "qualname": "Logger.info", "kind": "function", "doc": "<p>Prints the message to the standard output</p>\n\n<p>Args:\n    msg (str): The message to print</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">msg</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.logger.Logger.warn", "modulename": "python3-10.pyscalpel.logger", "qualname": "Logger.warn", "kind": "function", "doc": "<p>Prints the message to the standard output</p>\n\n<p>Args:\n    msg (str): The message to print</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">msg</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.logger.Logger.fatal", "modulename": "python3-10.pyscalpel.logger", "qualname": "Logger.fatal", "kind": "function", "doc": "<p>Prints the message to the standard output</p>\n\n<p>Args:\n    msg (str): The message to print</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">msg</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.logger.Logger.error", "modulename": "python3-10.pyscalpel.logger", "qualname": "Logger.error", "kind": "function", "doc": "<p>Prints the message to the standard error</p>\n\n<p>Args:\n    msg (str): The message to print</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">msg</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.logger.logger", "modulename": "python3-10.pyscalpel.logger", "qualname": "logger", "kind": "variable", "doc": "<p></p>\n", "annotation": ": python3-10.pyscalpel.logger.Logger", "default_value": "None"}, {"fullname": "python3-10.pyscalpel.utils", "modulename": "python3-10.pyscalpel.utils", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "python3-10.pyscalpel.utils.urldecode", "modulename": "python3-10.pyscalpel.utils", "qualname": "urldecode", "kind": "function", "doc": "<p>URL Decode all bytes in the given bytes object</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"nb\">bytes</span> <span class=\"o\">|</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">encoding</span><span class=\"o\">=</span><span class=\"s1\">&#39;latin-1&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bytes</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.utils.urlencode_all", "modulename": "python3-10.pyscalpel.utils", "qualname": "urlencode_all", "kind": "function", "doc": "<p>URL Encode all bytes in the given bytes object</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"nb\">bytes</span> <span class=\"o\">|</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">encoding</span><span class=\"o\">=</span><span class=\"s1\">&#39;latin-1&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bytes</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.utils.current_function_name", "modulename": "python3-10.pyscalpel.utils", "qualname": "current_function_name", "kind": "function", "doc": "<p>Get current function name</p>\n\n<p>Returns:\n    str: The function name</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.venv", "modulename": "python3-10.pyscalpel.venv", "kind": "module", "doc": "<p>This module provides reimplementations of Python virtual environnements scripts</p>\n\n<p>This is designed to be used internally, \nbut in the case where the user desires to dynamically switch venvs using this,\nthey should ensure the selected venv has the dependencies required by Scalpel.</p>\n"}, {"fullname": "python3-10.pyscalpel.venv.deactivate", "modulename": "python3-10.pyscalpel.venv", "qualname": "deactivate", "kind": "function", "doc": "<p>Deactivates the current virtual environment.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.venv.activate", "modulename": "python3-10.pyscalpel.venv", "qualname": "activate", "kind": "function", "doc": "<p>Activates the virtual environment at the given path.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.venv.install", "modulename": "python3-10.pyscalpel.venv", "qualname": "install", "kind": "function", "doc": "<p>Install a Python package in the current venv.</p>\n\n<p>Returns:\n    int: The pip install command exit code.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">packages</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.venv.uninstall", "modulename": "python3-10.pyscalpel.venv", "qualname": "uninstall", "kind": "function", "doc": "<p>Uninstall a Python package from the current venv.</p>\n\n<p>Returns:\n    int: The pip uninstall command exit code.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">packages</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.venv.create", "modulename": "python3-10.pyscalpel.venv", "qualname": "create", "kind": "function", "doc": "<p>Creates a Python venv on the given path</p>\n\n<p>Returns:\n    int: The <code>python3 -m venv</code> command exit code.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.pyscalpel.venv.create_default", "modulename": "python3-10.pyscalpel.venv", "qualname": "create_default", "kind": "function", "doc": "<p>Creates a default venv in the user's home directory\n    Only creates it if the directory doesn't already exist</p>\n\n<p>Returns:\n    str: The venv directory path.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.qs", "modulename": "python3-10.qs", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "python3-10.qs.list_to_dict", "modulename": "python3-10.qs", "qualname": "list_to_dict", "kind": "function", "doc": "<p>Maps a list to an equivalent dictionary</p>\n\n<p>e.g: [\"a\",\"b\",\"c\"] -> {0:\"a\",1:\"b\",2:\"c\"}</p>\n\n<p>Used to convert lists to PHP-style arrays</p>\n\n<p>Args:\n    lst (list[Any]): The list to transform</p>\n\n<p>Returns:\n    dict[int, Any]: The \"PHP-style array\" dict</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">lst</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.qs.is_valid_php_query_name", "modulename": "python3-10.qs", "qualname": "is_valid_php_query_name", "kind": "function", "doc": "<p>Check if a given name follows PHP query string syntax.\nThis implementation assumes that names will be structured like:\nfield\nfield[key]\nfield[key1][key2]\nfield[]</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.qs.merge_dict_in_list", "modulename": "python3-10.qs", "qualname": "merge_dict_in_list", "kind": "function", "doc": "<p>Merge a dictionary into a list.</p>\n\n<p>Only the values of integer keys from the dictionary are merged into the list.</p>\n\n<p>If the dictionary contains only integer keys, returns a merged list.\nIf the dictionary contains other keys as well, returns a merged dict.</p>\n\n<p>Args:\n    source (dict): The dictionary to merge.\n    destination (list): The list to merge.</p>\n\n<p>Returns:\n    list | dict: Merged data.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">source</span><span class=\"p\">:</span> <span class=\"nb\">dict</span>, </span><span class=\"param\"><span class=\"n\">destination</span><span class=\"p\">:</span> <span class=\"nb\">list</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span> <span class=\"o\">|</span> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.qs.merge", "modulename": "python3-10.qs", "qualname": "merge", "kind": "function", "doc": "<p>Merge the <code>source</code> and <code>destination</code>.\nPerforms a shallow or deep merge based on the <code>shallow</code> flag.\nArgs:\n    source (Any): The source data to merge.\n    destination (Any): The destination data to merge into.\n    shallow (bool): If True, perform a shallow merge. Defaults to True.\nReturns:\n    Any: Merged data.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">source</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">|</span> <span class=\"nb\">list</span>, </span><span class=\"param\"><span class=\"n\">destination</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">|</span> <span class=\"nb\">list</span>, </span><span class=\"param\"><span class=\"n\">shallow</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "python3-10.qs.qs_parse", "modulename": "python3-10.qs", "qualname": "qs_parse", "kind": "function", "doc": "<p>Parses a query string using PHP's nesting syntax, and returns a dict.</p>\n\n<p>Args:\n    qs (str): The query string to parse.\n    keep_blank_values (bool): If True, includes keys with blank values. Defaults to True.\n    strict_parsing (bool): If True, raises ValueError on any errors. Defaults to False.</p>\n\n<p>Returns:\n    dict: A dictionary representing the parsed query string.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">qs</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">keep_blank_values</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">strict_parsing</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.qs.build_qs", "modulename": "python3-10.qs", "qualname": "build_qs", "kind": "function", "doc": "<p>Build a query string from a dictionary or list of 2-tuples.\nCoerces data types before serialization.\nArgs:\n    query (Mapping): The query data to build the string from.\nReturns:\n    str: A query string.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">query</span><span class=\"p\">:</span> <span class=\"n\">Mapping</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "python3-10.qs.qs_parse_pairs", "modulename": "python3-10.qs", "qualname": "qs_parse_pairs", "kind": "function", "doc": "<p>Parses a list of key/value pairs and returns a dict.</p>\n\n<p>Args:\n    pairs (list[tuple[str, str]]): The list of key/value pairs.\n    keep_blank_values (bool): If True, includes keys with blank values. Defaults to True.\n    strict_parsing (bool): If True, raises ValueError on any errors. Defaults to False.</p>\n\n<p>Returns:\n    dict: A dictionary representing the parsed pairs.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">pairs</span><span class=\"p\">:</span> <span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">keep_blank_values</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">strict_parsing</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}];

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();